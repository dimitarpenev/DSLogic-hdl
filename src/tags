!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADDR	sdramc/sdram_ctl.v	/^input  [31:0] ADDR;$/;"	p
BA	sdramc/sdram_ctl.v	/^output  [1:0] BA;$/;"	p
BIT_SIZE	sdramc/mem_ctrl.v	/^wire    [1:0]   BIT_SIZE;           \/\/ 2'b00 : 4,        2'b01 : 8,      2'b10 : 16,      2'b11 : 32$/;"	n
BIT_SIZE	sdramc/sdram_ctl.v	/^             BIT_SIZE;  \/\/ 2'b00 : 4,        2'b01 : 8,      2'b10 : 16,      2'b11 : 32$/;"	p
BK_SIZE	sdramc/mem_ctrl.v	/^wire            BK_SIZE;            \/\/ 1'b0  : B0,       1'b1 : B0-B1$/;"	n
BK_SIZE	sdramc/sdram_ctl.v	/^input        BK_SIZE;   \/\/ 1'b0  : B0,        1'b1 : B0-B1$/;"	p
BLK_LENGTH	sdramc/sdram_ctl.v	/^wire [2:0] BLK_LENGTH = BLK_SIZE == 3'b000 ? 0 :$/;"	n
BLK_SIZE	sdramc/mem_ctrl.v	/^wire    [2:0]   BLK_SIZE;           \/\/ Burst Length$/;"	n
BLK_SIZE	sdramc/sdram_ctl.v	/^input  [2:0] BLK_SIZE;$/;"	p
BURST_CNT	sdramc/sdram_ctl.v	/^reg [2:0] BURST_CNT = 3'b0;$/;"	r
BURST_CNT_DEC_1	sdramc/sdram_ctl.v	/^wire [2:0] BURST_CNT_DEC_1 = (BURST_CNT - 1'b1);$/;"	n
BURST_CNT_EQ_0	sdramc/sdram_ctl.v	/^wire BURST_CNT_EQ_0 = (BURST_CNT == 3'd0);$/;"	n
BURST_CNT_EQ_1	sdramc/sdram_ctl.v	/^wire BURST_CNT_EQ_1 = (BURST_CNT == 3'd1);$/;"	n
BURST_RDY	sdramc/sdram_ctl.v	/^output RD_DAT_RDY, BURST_RDY;$/;"	p
BURST_RDY	sdramc/sdram_ctl.v	/^wire BURST_RDY = RW & BURST_RDY_D ;$/;"	n
BURST_RDY_D	sdramc/sdram_ctl.v	/^reg  BURST_RDY_D = 1'b0;$/;"	r
BURST_RDYt	sdramc/sdram_ctl.v	/^wire BURST_RDYt = BURST_RDY;$/;"	n
CAS_	sdramc/sdram_ctl.v	/^output  CKE, RAS_, CAS_, WE_;$/;"	p
CAS_	sdramc/sdram_ctl.v	/^wire CAS_ = Q_CAS_;$/;"	n
CAS_CNT	sdramc/sdram_ctl.v	/^reg  [2:0] CAS_CNT = 3'b0;$/;"	r
CAS_CNT_DEC_1	sdramc/sdram_ctl.v	/^wire [2:0] CAS_CNT_DEC_1 = (CAS_CNT - 1'b1);$/;"	n
CAS_CNT_EQ_0	sdramc/sdram_ctl.v	/^wire       CAS_CNT_EQ_0  = (CAS_CNT == 3'd0);$/;"	n
CAS_CNT_EQ_1	sdramc/sdram_ctl.v	/^wire       CAS_CNT_EQ_1  = (CAS_CNT == 3'd1);$/;"	n
CHK_RD_WR	i2c/serialInterface.v	/^`define CHK_RD_WR 4'b0001$/;"	c
CKE	sdramc/sdram_ctl.v	/^output  CKE, RAS_, CAS_, WE_;$/;"	p
CKE	sdramc/sdram_ctl.v	/^reg CKE = 1'b0;$/;"	r
CLK	sdramc/sdram_ctl.v	/^input CLK, RST_;$/;"	p
CLK_FREQ	i2c/i2cSlave_define.v	/^`define CLK_FREQ 100$/;"	c
CLK_IN1	ipcore_dir/adc_dcm.v	/^  input         CLK_IN1,$/;"	p
CLK_IN1	ipcore_dir/core_dcm.v	/^  input         CLK_IN1,$/;"	p
CLK_IN1	ipcore_dir/in_dcm.v	/^  input         CLK_IN1,$/;"	p
CLK_IN1	ipcore_dir/int_skew_dcm.v	/^  input         CLK_IN1,$/;"	p
CLK_IN1	ipcore_dir/out_skew_dcm.v	/^  input         CLK_IN1,$/;"	p
CLK_OUT1	ipcore_dir/out_skew_dcm.v	/^  output        CLK_OUT1,$/;"	p
CLK_OUT2	ipcore_dir/adc_dcm.v	/^  output        CLK_OUT2,$/;"	p
CLK_OUT2	ipcore_dir/core_dcm.v	/^  output        CLK_OUT2,$/;"	p
CLK_OUT2	ipcore_dir/in_dcm.v	/^  output        CLK_OUT2,$/;"	p
CLK_OUT4	ipcore_dir/core_dcm.v	/^  output        CLK_OUT4,$/;"	p
COL_SIZE	sdramc/mem_ctrl.v	/^wire    [2:0]   COL_SIZE;           \/\/ 3'b000: A0-A7     3'b001: A0-A8   3'b010: A0-A9$/;"	n
COL_SIZE	sdramc/sdram_ctl.v	/^input  [1:0] COL_SIZE;  \/\/ 3'b000: A0-A7     3'b001: A0-A8   3'b010: A0-A9$/;"	p
CPU_GNT_	sdramc/sdram_ctl.v	/^input  CPU_GNT_;$/;"	p
CS_	sdramc/sdram_ctl.v	/^output  CS_;$/;"	p
CurrState_SISt	i2c/serialInterface.v	/^reg [3:0]CurrState_SISt, NextState_SISt;$/;"	r
D	DSLogic_top.v	/^`define D #1$/;"	c
D	capture.v	/^`define D #1$/;"	c
D	cfg.v	/^`define D #1$/;"	c
D	cons_buf.v	/^`define D #1$/;"	c
D	dread.v	/^`define D #1$/;"	c
D	dso_ctl.v	/^`define D #1$/;"	c
D	dwrite.v	/^`define D #1$/;"	c
D	loopback.v	/^`define D #1$/;"	c
D	reset.v	/^`define D #1$/;"	c
D	rle.v	/^`define D #1$/;"	c
D	sample.v	/^`define D #1$/;"	c
D	sdramc/mem_ctrl.v	/^`define D #1$/;"	c
D	sdramc/sdram_ctl.v	/^`define D #1$/;"	c
D	sdramc/sdram_io.v	/^`define D #1$/;"	c
D	trigger.v	/^`define D #1$/;"	c
DAT	sdramc/sdram_ctl.v	/^reg  [15:0] DAT = 16'b0;$/;"	r
DAT_I	sdramc/sdram_ctl.v	/^input  [15:0] DAT_I;$/;"	p
DAT_O	sdramc/sdram_ctl.v	/^output [15:0] DAT_O;$/;"	p
DAT_O	sdramc/sdram_ctl.v	/^wire [15:0] DAT_O = DAT;$/;"	n
DAT_RDY	sdramc/sdram_ctl.v	/^wire DAT_RDY = Q_DAT_RDY;$/;"	n
DEB_I2C_LEN	i2c/i2cSlave_define.v	/^`define DEB_I2C_LEN (10*`CLK_FREQ)\/48$/;"	c
DEPTH	loopback.v	/^parameter	DEPTH = 32'hffffff;$/;"	c
DIMM_ADDR	sdramc/sdram_ctl.v	/^output [12:0] DIMM_ADDR;$/;"	p
DP_MAXBIT	cons_buf.v	/^`define DP_MAXBIT			12$/;"	c
DQM	sdramc/sdram_ctl.v	/^output  DQM;$/;"	p
DQM	sdramc/sdram_ctl.v	/^wire DQM = Q_DQM;$/;"	n
DQ_I	sdramc/sdram_ctl.v	/^input  [15:0] DQ_I;$/;"	p
DQ_O	sdramc/sdram_ctl.v	/^output [15:0] DQ_O;$/;"	p
DQ_O	sdramc/sdram_ctl.v	/^wire [15:0] DQ_O = DAT;$/;"	n
DQ_OE	sdramc/sdram_ctl.v	/^output DQ_OE;$/;"	p
DQ_OE	sdramc/sdram_ctl.v	/^reg  DQ_OE = 1'b0;$/;"	r
DSLogic_top	DSLogic_top.v	/^module DSLogic_top($/;"	m
D_BA	sdramc/sdram_ctl.v	/^reg   [1:0] Q_BA = 2'b0, D_BA;$/;"	r
D_BAUD_FREQ	dso_ctl.v	/^`define D_BAUD_FREQ			12'h120$/;"	c
D_BAUD_LIMIT	dso_ctl.v	/^`define D_BAUD_LIMIT		16'h3cc0$/;"	c
D_CAS_	sdramc/sdram_ctl.v	/^reg Q_CAS_, D_CAS_;$/;"	r
D_CASt_	sdramc/sdram_ctl.v	/^wire D_CASt_ = D_CAS_;$/;"	n
D_CS_	sdramc/sdram_ctl.v	/^reg   Q_CS_ = 1'b0, D_CS_;$/;"	r
D_DIMM_ADDR	sdramc/sdram_ctl.v	/^reg  [12:0] Q_DIMM_ADDR = 13'b0, D_DIMM_ADDR;$/;"	r
D_RAS_	sdramc/sdram_ctl.v	/^reg Q_RAS_, D_RAS_;$/;"	r
D_RASt_	sdramc/sdram_ctl.v	/^wire D_RASt_ = D_RAS_;$/;"	n
D_RW	sdramc/sdram_ctl.v	/^reg  D_RW = 1'b0;$/;"	r
D_RWt	sdramc/sdram_ctl.v	/^wire D_RWt = D_RW;$/;"	n
D_SD	sdramc/sdram_ctl.v	/^reg [8:0] D_SD, Q_SD;$/;"	r
D_SDt	sdramc/sdram_ctl.v	/^wire [8:0] D_SDt = D_SD;$/;"	n
D_WE_	sdramc/sdram_ctl.v	/^reg Q_WE_, D_WE_;$/;"	r
D_WEt_	sdramc/sdram_ctl.v	/^wire D_WEt_ = D_WE_;$/;"	n
FPS_MAX	cons_buf.v	/^`define FPS_MAX			24'd5000000$/;"	c
FULL_PAGE	sdramc/sdram_ctl.v	/^wire FULL_PAGE = BLK_SIZE == 3'b111;$/;"	n
I2C_ACK	i2c/i2cSlave_define.v	/^`define I2C_ACK 1'b0$/;"	c
I2C_ADDRESS	i2c/i2cSlave_define.v	/^`define I2C_ADDRESS 7'h51$/;"	c
I2C_NAK	i2c/i2cSlave_define.v	/^`define I2C_NAK 1'b1$/;"	c
INIT	loopback.v	/^parameter	INIT  = 3'b000;$/;"	c
INIT_CNT	sdramc/sdram_init.v	/^    INIT_CNT        = 16'h4000,$/;"	c
INIT_HALF_CNT	sdramc/sdram_init.v	/^    INIT_HALF_CNT   = INIT_CNT >> 1;$/;"	c
IS_SEQ	sdramc/mem_ctrl.v	/^wire            IS_SEQ;             \/\/ Burst Type$/;"	n
IS_SEQ	sdramc/sdram_ctl.v	/^input        IS_SEQ, MODULE_BK_NUM;$/;"	p
LOCKED	ipcore_dir/adc_dcm.v	/^  output        LOCKED$/;"	p
LOCKED	ipcore_dir/in_dcm.v	/^  output        LOCKED$/;"	p
MODULE_BK_NUM	sdramc/mem_ctrl.v	/^wire            MODULE_BK_NUM;      \/\/ Not Used$/;"	n
MODULE_BK_NUM	sdramc/sdram_ctl.v	/^input        IS_SEQ, MODULE_BK_NUM;$/;"	p
MUX_EN	sdramc/sdram_ctl.v	/^output MUX_EN;$/;"	p
MUX_EN	sdramc/sdram_ctl.v	/^wire MUX_EN = M_CNT_EQ_0 & q_idle;$/;"	n
M_CNT	sdramc/sdram_ctl.v	/^reg [5:0] M_CNT;$/;"	r
M_CNT_EQ_0	sdramc/sdram_ctl.v	/^wire M_CNT_EQ_0 = M_CNT == 0;$/;"	n
NULL_DET	i2c/i2cSlave_define.v	/^`define NULL_DET 2'b00$/;"	c
NextState_SISt	i2c/serialInterface.v	/^reg [3:0]CurrState_SISt, NextState_SISt;$/;"	r
PAA	sdramc/mem_ctrl.v	/^wire            PAA;$/;"	n
PAA	sdramc/sdram_ctl.v	/^input  STOP_CLK, PAA, SET_MODE;$/;"	p
PRECHARGE_EN	sdramc/sdram_ctl.v	/^wire   PRECHARGE_EN = RAS_CNT_EQ_0;$/;"	n
Q_BA	sdramc/sdram_ctl.v	/^reg   [1:0] Q_BA = 2'b0, D_BA;$/;"	r
Q_CAS_	sdramc/sdram_ctl.v	/^reg Q_CAS_, D_CAS_;$/;"	r
Q_CS_	sdramc/sdram_ctl.v	/^reg   Q_CS_ = 1'b0, D_CS_;$/;"	r
Q_DAT_RDY	sdramc/sdram_ctl.v	/^reg Q_DAT_RDY = 1'b0;$/;"	r
Q_DIMM_ADDR	sdramc/sdram_ctl.v	/^reg  [12:0] Q_DIMM_ADDR = 13'b0, D_DIMM_ADDR;$/;"	r
Q_DQM	sdramc/sdram_ctl.v	/^reg  Q_DQM;$/;"	r
Q_RAS_	sdramc/sdram_ctl.v	/^reg Q_RAS_, D_RAS_;$/;"	r
Q_RD_DAT_RDY	sdramc/sdram_ctl.v	/^reg  Q_RD_DAT_RDY = 1'b0;$/;"	r
Q_SD	sdramc/sdram_ctl.v	/^reg [8:0] D_SD, Q_SD;$/;"	r
Q_WE_	sdramc/sdram_ctl.v	/^reg Q_WE_, D_WE_;$/;"	r
RAS_	sdramc/sdram_ctl.v	/^output  CKE, RAS_, CAS_, WE_;$/;"	p
RAS_	sdramc/sdram_ctl.v	/^wire RAS_ = Q_RAS_;$/;"	n
RAS_CNT	sdramc/sdram_ctl.v	/^reg  [2:0] RAS_CNT = 3'b0;$/;"	r
RAS_CNT_DEC_1	sdramc/sdram_ctl.v	/^wire [2:0] RAS_CNT_DEC_1 = (RAS_CNT - 1'b1);$/;"	n
RAS_CNT_EQ_0	sdramc/sdram_ctl.v	/^wire       RAS_CNT_EQ_0  = (RAS_CNT == 3'b0);$/;"	n
RC_CNT	sdramc/sdram_ctl.v	/^reg  [3:0] RC_CNT = 4'b0;$/;"	r
RC_CNT_DEC_1	sdramc/sdram_ctl.v	/^wire [3:0] RC_CNT_DEC_1 = (RC_CNT - 1'b1);$/;"	n
RC_CNT_EQ_0	sdramc/sdram_ctl.v	/^wire RC_CNT_EQ_0;$/;"	n
RD	sdramc/sdram_ctl.v	/^input  RD, WR;$/;"	p
RD_DAT_RDY	sdramc/sdram_ctl.v	/^output RD_DAT_RDY, BURST_RDY;$/;"	p
RD_DAT_RDY	sdramc/sdram_ctl.v	/^wire RD_DAT_RDY = Q_RD_DAT_RDY;$/;"	n
READ	loopback.v	/^parameter	READ  = 3'b101;$/;"	c
READ_CHK_LOOP_FIN	i2c/serialInterface.v	/^`define READ_CHK_LOOP_FIN 4'b0100$/;"	c
READ_NRDY	dread.v	/^parameter	READ_NRDY = 10'd32;$/;"	c
READ_RDY	dread.v	/^parameter	READ_RDY = 10'd512;$/;"	c
READ_RD_LOOP	i2c/serialInterface.v	/^`define READ_RD_LOOP 4'b0010$/;"	c
READ_WT_ACK	i2c/serialInterface.v	/^`define READ_WT_ACK 4'b0110$/;"	c
READ_WT_HI	i2c/serialInterface.v	/^`define READ_WT_HI 4'b0011$/;"	c
READ_WT_LO	i2c/serialInterface.v	/^`define READ_WT_LO 4'b0101$/;"	c
REF_CNT	sdramc/sdram_ctl.v	/^reg  [11:0] REF_CNT = 12'b0;$/;"	r
REF_CNT_DEC_1	sdramc/sdram_ctl.v	/^wire [11:0] REF_CNT_DEC_1 = (REF_CNT - 1'b1);$/;"	n
REF_CNT_EQ_0	sdramc/sdram_ctl.v	/^reg  REF_CNT_EQ_0 = 1'b0;$/;"	r
REF_CNTt	sdramc/sdram_ctl.v	/^wire [11:0] REF_CNTt = REF_CNT;$/;"	n
RESET	ipcore_dir/core_dcm.v	/^  input         RESET,$/;"	p
RESET	ipcore_dir/int_skew_dcm.v	/^  input         RESET,$/;"	p
RESET	ipcore_dir/out_skew_dcm.v	/^  input         RESET,$/;"	p
RFIFO_DN	dread.v	/^parameter	RFIFO_DN = 10'd512;$/;"	c
RFIFO_UP	dread.v	/^parameter	RFIFO_UP = 10'd768;$/;"	c
ROW_SIZE	sdramc/mem_ctrl.v	/^wire    [1:0]   ROW_SIZE;           \/\/ 2'b00 : A0-A10,   2'b01 : A0-A11, 2'b10 : A0-A12$/;"	n
ROW_SIZE	sdramc/sdram_ctl.v	/^input  [1:0] ROW_SIZE,  \/\/ 2'b00 : A0-A10,   2'b01 : A0-A11, 2'b10 : A0-A12$/;"	p
RP_CNT	sdramc/sdram_ctl.v	/^reg  [1:0] RP_CNT = 2'b0;$/;"	r
RP_CNT_DEC_1	sdramc/sdram_ctl.v	/^wire [1:0] RP_CNT_DEC_1 = (RP_CNT - 1'b1);$/;"	n
RP_CNT_EQ_0	sdramc/sdram_ctl.v	/^wire RP_CNT_EQ_0;$/;"	n
RST_	sdramc/sdram_ctl.v	/^input CLK, RST_;$/;"	p
RW	sdramc/sdram_ctl.v	/^output RW;$/;"	p
SCL_DEL_LEN	i2c/i2cSlave_define.v	/^`define SCL_DEL_LEN (10*`CLK_FREQ)\/48$/;"	c
SDA_DEL_LEN	i2c/i2cSlave_define.v	/^`define SDA_DEL_LEN (4*`CLK_FREQ)\/48$/;"	c
SD_AUTO_REF	sdramc/sdram_ctl.v	/^parameter SD_AUTO_REF   = 9'b000000100;$/;"	c
SD_BURST_TERM	sdramc/sdram_ctl.v	/^parameter SD_BURST_TERM = 9'b001000000;$/;"	c
SD_IDLE	sdramc/sdram_ctl.v	/^parameter SD_IDLE       = 9'b000000001;$/;"	c
SD_PRECHARGE	sdramc/sdram_ctl.v	/^parameter SD_PRECHARGE  = 9'b010000000;$/;"	c
SD_RD2PRECH	sdramc/sdram_ctl.v	/^parameter SD_RD2PRECH   = 9'b100000000;$/;"	c
SD_READ	sdramc/sdram_ctl.v	/^parameter SD_READ       = 9'b000010000;$/;"	c
SD_ROW_ACTIVE	sdramc/sdram_ctl.v	/^parameter SD_ROW_ACTIVE = 9'b000001000;$/;"	c
SD_SET_MODE	sdramc/sdram_ctl.v	/^parameter SD_SET_MODE   = 9'b000000010;$/;"	c
SD_WRITE	sdramc/sdram_ctl.v	/^parameter SD_WRITE      = 9'b000100000;$/;"	c
SET_MODE	sdramc/mem_ctrl.v	/^wire            SET_MODE;$/;"	n
SET_MODE	sdramc/sdram_ctl.v	/^input  STOP_CLK, PAA, SET_MODE;$/;"	p
START	i2c/serialInterface.v	/^`define START 4'b0000$/;"	c
START_DET	i2c/i2cSlave_define.v	/^`define START_DET 2'b01$/;"	c
STOP_CLK	sdramc/mem_ctrl.v	/^wire            STOP_CLK;$/;"	n
STOP_CLK	sdramc/sdram_ctl.v	/^input  STOP_CLK, PAA, SET_MODE;$/;"	p
STOP_DET	i2c/i2cSlave_define.v	/^`define STOP_DET 2'b10$/;"	c
STREAM_IDLE	i2c/i2cSlave_define.v	/^`define STREAM_IDLE 2'b00$/;"	c
STREAM_READ	i2c/i2cSlave_define.v	/^`define STREAM_READ 2'b01$/;"	c
STREAM_WRITE_ADDR	i2c/i2cSlave_define.v	/^`define STREAM_WRITE_ADDR 2'b10$/;"	c
STREAM_WRITE_DATA	i2c/i2cSlave_define.v	/^`define STREAM_WRITE_DATA 2'b11$/;"	c
SW_RD	loopback.v	/^parameter	SW_RD = 3'b100;$/;"	c
SW_WR	loopback.v	/^parameter	SW_WR = 3'b001;$/;"	c
SYNC_CODE	cfg.v	/^parameter    SYNC_CODE = 8'hFF;$/;"	c
S_PAA	sdramc/sdram_ctl.v	/^reg  S_PAA = 1'b0;$/;"	r
TIMING_CNT	sdramc/sdram_ctl.v	/^reg  [1:0] TIMING_CNT = 2'b0;$/;"	r
TIMING_CNT_DEC_1	sdramc/sdram_ctl.v	/^wire [1:0] TIMING_CNT_DEC_1 = (TIMING_CNT - 1'b1);$/;"	n
TIMING_CNT_EQ_0	sdramc/sdram_ctl.v	/^wire       TIMING_CNT_EQ_0  = (TIMING_CNT == 2'b0);$/;"	n
TIMING_CNT_EQ_1	sdramc/sdram_ctl.v	/^wire       TIMING_CNT_EQ_1  = (TIMING_CNT == 2'd1);$/;"	n
UNSYNC_CODE	cfg.v	/^parameter    UNSYNC_CODE = 8'h00;$/;"	c
WE_	sdramc/sdram_ctl.v	/^output  CKE, RAS_, CAS_, WE_;$/;"	p
WE_	sdramc/sdram_ctl.v	/^wire WE_ = Q_WE_;$/;"	n
WR	sdramc/sdram_ctl.v	/^input  RD, WR;$/;"	p
WRITE	loopback.v	/^parameter	WRITE = 3'b010;$/;"	c
WRITE_CHK_LOOP_FIN	i2c/serialInterface.v	/^`define WRITE_CHK_LOOP_FIN 4'b1001$/;"	c
WRITE_CLR_ST_STOP	i2c/serialInterface.v	/^`define WRITE_CLR_ST_STOP 4'b1111$/;"	c
WRITE_CLR_WR	i2c/serialInterface.v	/^`define WRITE_CLR_WR 4'b1110$/;"	c
WRITE_LOOP_WT_LO	i2c/serialInterface.v	/^`define WRITE_LOOP_WT_LO 4'b1010$/;"	c
WRITE_ST_LOOP	i2c/serialInterface.v	/^`define WRITE_ST_LOOP 4'b1011$/;"	c
WRITE_WT_HI	i2c/serialInterface.v	/^`define WRITE_WT_HI 4'b1000$/;"	c
WRITE_WT_HI2	i2c/serialInterface.v	/^`define WRITE_WT_HI2 4'b1101$/;"	c
WRITE_WT_LO	i2c/serialInterface.v	/^`define WRITE_WT_LO 4'b0111$/;"	c
WRITE_WT_LO2	i2c/serialInterface.v	/^`define WRITE_WT_LO2 4'b1100$/;"	c
adc_clka	DSLogic_top.v	/^wire	adc_clka;$/;"	n
adc_clka_out	DSLogic_top.v	/^wire	adc_clka_out;$/;"	n
adc_clkb	DSLogic_top.v	/^wire	adc_clkb;$/;"	n
adc_clkb_out	DSLogic_top.v	/^wire	adc_clkb_out;$/;"	n
adc_dcm	ipcore_dir/adc_dcm.v	/^module adc_dcm$/;"	m
afifo_empty	cons_buf.v	/^wire	afifo_empty;$/;"	n
afifo_full	cons_buf.v	/^wire	afifo_full;$/;"	n
afifo_prog_empty	cons_buf.v	/^wire	afifo_prog_empty;$/;"	n
afifo_prog_full	cons_buf.v	/^wire	afifo_prog_full;$/;"	n
after_trig_depth	DSLogic_top.v	/^wire	[31:0]	after_trig_depth;$/;"	n
after_trig_depth	capture.v	/^	input	[31:0]	after_trig_depth,$/;"	p
after_trig_depth	cfg.v	/^	output	[31:0]	after_trig_depth,$/;"	p
asyncfifo	ipcore_dir/asyncfifo.v	/^module asyncfifo($/;"	m
auto_req	cons_buf.v	/^reg	auto_req;$/;"	r
auto_req_nxt	cons_buf.v	/^wire	auto_req_nxt;$/;"	n
baud_clk	uart/uart_top.v	/^output			baud_clk;$/;"	p
baud_freq	dso_ctl.v	/^wire	[11:0]	baud_freq;	\/\/ baud rate setting registers - see header description $/;"	n
baud_freq	uart/baud_gen.v	/^input	[11:0]	baud_freq;	\/\/ baud rate setting registers - see header description $/;"	p
baud_freq	uart/uart_top.v	/^input	[11:0]	baud_freq;	\/\/ baud rate setting registers - see header description $/;"	p
baud_gen	uart/baud_gen.v	/^module baud_gen $/;"	m
baud_limit	dso_ctl.v	/^wire	[15:0]	baud_limit;$/;"	n
baud_limit	uart/baud_gen.v	/^input	[15:0]	baud_limit;$/;"	p
baud_limit	uart/uart_top.v	/^input	[15:0]	baud_limit;$/;"	p
bitCnt	i2c/serialInterface.v	/^reg  [2:0]bitCnt, next_bitCnt;$/;"	r
bit_count	uart/uart_rx.v	/^reg [3:0]	bit_count;$/;"	r
bit_count	uart/uart_tx.v	/^reg [3:0]	bit_count;$/;"	r
blk_addr	sdramc/sdram_ctl.v	/^wire [2:0] blk_addr  =  BLK_SIZE == 3'b000 ? 0         :$/;"	n
break_rw	sdramc/sdram_ctl.v	/^reg  break_rw = 1'b0;$/;"	r
buf_rd_data	cons_buf.v	/^wire	[15:0]	buf_rd_data;$/;"	n
buf_rd_rdy	cons_buf.v	/^reg	buf_rd_rdy;$/;"	r
buf_rd_valid	cons_buf.v	/^reg	buf_rd_valid;$/;"	r
buf_rdy	cons_buf.v	/^reg	buf_rdy;$/;"	r
buf_rdy_1T	cons_buf.v	/^reg	buf_rdy_1T;$/;"	r
buf_rdy_nxt	cons_buf.v	/^wire	buf_rdy_nxt;$/;"	n
capture	capture.v	/^module capture($/;"	m
capture_cnt	capture.v	/^reg	[31:0]	capture_cnt;$/;"	r
capture_cnt_nxt	capture.v	/^wire	[31:0]	capture_cnt_nxt;$/;"	n
capture_cnt_valid	capture.v	/^reg				capture_cnt_valid = 1'b0;$/;"	r
capture_data	DSLogic_top.v	/^wire	[15:0]	capture_data;$/;"	n
capture_data	cons_buf.v	/^	input	[15:0]		capture_data,$/;"	p
capture_data	dwrite.v	/^	input	[15:0]	capture_data,$/;"	p
capture_data_16T	cons_buf.v	/^reg	[16:0]	capture_data_16T;$/;"	r
capture_data_1T	cons_buf.v	/^reg	[16:0]	capture_data_1T;$/;"	r
capture_data_2T	cons_buf.v	/^reg	[16:0]	capture_data_2T;$/;"	r
capture_data_4T	cons_buf.v	/^reg	[16:0]	capture_data_4T;$/;"	r
capture_data_8T	cons_buf.v	/^reg	[16:0]	capture_data_8T;$/;"	r
capture_data_fix	capture.v	/^reg	[15:0]	capture_data_fix;$/;"	r
capture_data_fix_nxt	capture.v	/^wire	[15:0]	capture_data_fix_nxt;$/;"	n
capture_data_nxt	loopback.v	/^wire	[31:0]	capture_data_nxt;$/;"	n
capture_data_pre	capture.v	/^wire	[15:0]	capture_data_pre;$/;"	n
capture_data_zero	capture.v	/^reg	[15:0]	capture_data_zero;$/;"	r
capture_data_zero_nxt	capture.v	/^wire	[15:0]	capture_data_zero_nxt;$/;"	n
capture_done	DSLogic_top.v	/^wire		capture_done;$/;"	n
capture_done	cons_buf.v	/^	input					capture_done,$/;"	p
capture_done	dwrite.v	/^	input		capture_done,$/;"	p
capture_done_nxt	capture.v	/^wire		capture_done_nxt;$/;"	n
capture_done_sdram_clk	dwrite.v	/^reg		capture_done_sdram_clk;$/;"	r
capture_done_sync	dwrite.v	/^reg		capture_done_sync;$/;"	r
capture_valid	DSLogic_top.v	/^wire		capture_valid;$/;"	n
capture_valid	capture.v	/^	output					capture_valid,$/;"	p
capture_valid_nxt	loopback.v	/^wire	capture_valid_nxt;$/;"	n
capture_valid_pre	capture.v	/^reg				capture_valid_pre;$/;"	r
capture_valid_pre_1T	capture.v	/^reg			capture_valid_pre_1T;$/;"	r
capture_valid_pre_2T	capture.v	/^reg			capture_valid_pre_2T;$/;"	r
capture_valid_pre_nxt	capture.v	/^wire				capture_valid_pre_nxt;$/;"	n
capture_valid_zero	capture.v	/^wire			capture_valid_zero;$/;"	n
capture_wr	cons_buf.v	/^reg	capture_wr;$/;"	r
capture_wr_nxt	cons_buf.v	/^wire	capture_wr_nxt;$/;"	n
caputre_cnt_valid_nxt	capture.v	/^wire				caputre_cnt_valid_nxt;$/;"	n
ce_1	uart/uart_rx.v	/^wire ce_1;		\/\/ clock enable at bit rate $/;"	n
ce_1	uart/uart_tx.v	/^wire ce_1;		\/\/ clock enable at bit rate $/;"	n
ce_16	uart/baud_gen.v	/^output			ce_16;		\/\/ baud rate multiplyed by 16 $/;"	p
ce_16	uart/baud_gen.v	/^reg ce_16;$/;"	r
ce_16	uart/uart_rx.v	/^input			ce_16;			\/\/ baud rate multiplyed by 16 - generated by baud module $/;"	p
ce_16	uart/uart_top.v	/^wire ce_16;		\/\/ clock enable at bit rate $/;"	n
ce_16	uart/uart_tx.v	/^input			ce_16;			\/\/ baud rate multiplyed by 16 - generated by baud module $/;"	p
ce_1_mid	uart/uart_rx.v	/^wire ce_1_mid;	\/\/ clock enable at the middle of each bit - used to sample data $/;"	n
cfg	cfg.v	/^module cfg($/;"	m
cfg0_reg	cfg.v	/^reg	[15:0]	cfg0_reg;$/;"	r
cfg0_reg_nxt	cfg.v	/^wire	[15:0]	cfg0_reg_nxt;$/;"	n
cfg10_reg	cfg.v	/^reg	[15:0]	cfg10_reg;$/;"	r
cfg10_reg_nxt	cfg.v	/^wire	[15:0]	cfg10_reg_nxt;$/;"	n
cfg11_reg	cfg.v	/^reg	[15:0]	cfg11_reg;$/;"	r
cfg11_reg_nxt	cfg.v	/^wire	[15:0]	cfg11_reg_nxt;$/;"	n
cfg12_reg	cfg.v	/^reg	[15:0]	cfg12_reg;$/;"	r
cfg12_reg_nxt	cfg.v	/^wire	[15:0]	cfg12_reg_nxt;$/;"	n
cfg13_reg	cfg.v	/^reg	[15:0]	cfg13_reg;$/;"	r
cfg13_reg_nxt	cfg.v	/^wire	[15:0]	cfg13_reg_nxt;$/;"	n
cfg1_reg	cfg.v	/^reg	[15:0]	cfg1_reg;$/;"	r
cfg1_reg_nxt	cfg.v	/^wire	[15:0]	cfg1_reg_nxt;$/;"	n
cfg2_reg	cfg.v	/^reg	[15:0]	cfg2_reg;$/;"	r
cfg2_reg_nxt	cfg.v	/^wire	[15:0]	cfg2_reg_nxt;$/;"	n
cfg3_reg	cfg.v	/^reg	[15:0]	cfg3_reg;$/;"	r
cfg3_reg_nxt	cfg.v	/^wire	[15:0]	cfg3_reg_nxt;$/;"	n
cfg4_reg	cfg.v	/^reg	[15:0]	cfg4_reg;$/;"	r
cfg4_reg_nxt	cfg.v	/^wire	[15:0]	cfg4_reg_nxt;$/;"	n
cfg5_reg	cfg.v	/^reg	[15:0]	cfg5_reg;$/;"	r
cfg5_reg_nxt	cfg.v	/^wire	[15:0]	cfg5_reg_nxt;$/;"	n
cfg6_reg	cfg.v	/^reg	[15:0]	cfg6_reg;$/;"	r
cfg6_reg_nxt	cfg.v	/^wire	[15:0]	cfg6_reg_nxt;$/;"	n
cfg7_reg	cfg.v	/^reg	[15:0]	cfg7_reg;$/;"	r
cfg7_reg_nxt	cfg.v	/^wire	[15:0]	cfg7_reg_nxt;$/;"	n
cfg8_reg	cfg.v	/^reg	[15:0]	cfg8_reg;$/;"	r
cfg8_reg_nxt	cfg.v	/^wire	[15:0]	cfg8_reg_nxt;$/;"	n
cfg9_reg	cfg.v	/^reg	[15:0]	cfg9_reg;$/;"	r
cfg9_reg_nxt	cfg.v	/^wire	[15:0]	cfg9_reg_nxt;$/;"	n
cfg_rst	reset.v	/^	output	cfg_rst,$/;"	p
cfg_rst_reg	reset.v	/^reg	[3:0]	cfg_rst_reg;$/;"	r
cfg_rst_reg_nxt	reset.v	/^wire	[3:0]	cfg_rst_reg_nxt;$/;"	n
cfg_trig_count	cfg.v	/^wire	[15:0]	cfg_trig_count;$/;"	n
cfg_trig_count_wr	cfg.v	/^wire				cfg_trig_count_wr;$/;"	n
cfg_trig_edge	cfg.v	/^wire	[15:0]	cfg_trig_edge;$/;"	n
cfg_trig_edge_wr	cfg.v	/^wire				cfg_trig_edge_wr;$/;"	n
cfg_trig_logic	cfg.v	/^wire	[15:0]	cfg_trig_logic;$/;"	n
cfg_trig_logic_wr	cfg.v	/^wire				cfg_trig_logic_wr;$/;"	n
cfg_trig_mask	cfg.v	/^wire	[15:0]	cfg_trig_mask;$/;"	n
cfg_trig_mask_wr	cfg.v	/^wire				cfg_trig_mask_wr;$/;"	n
cfg_trig_mu	cfg.v	/^wire	[1:0]		cfg_trig_mu;$/;"	n
cfg_trig_mu_addr	cfg.v	/^reg	[5:0]	cfg_trig_mu_addr;$/;"	r
cfg_trig_mu_addr_nxt	cfg.v	/^wire	[5:0]	cfg_trig_mu_addr_nxt;$/;"	n
cfg_trig_value	cfg.v	/^wire	[15:0]	cfg_trig_value;$/;"	n
cfg_trig_value_wr	cfg.v	/^wire				cfg_trig_value_wr;$/;"	n
cfifo	ipcore_dir/cfifo.v	/^module cfifo($/;"	m
cfifo_almost_full	cons_buf.v	/^wire	cfifo_almost_full;$/;"	n
cfifo_cnt	cons_buf.v	/^wire	[`DP_MAXBIT:0]	cfifo_cnt;$/;"	n
cfifo_din	cons_buf.v	/^reg	[15:0]	cfifo_din;$/;"	r
cfifo_din_nxt	cons_buf.v	/^wire	[15:0]	cfifo_din_nxt;$/;"	n
cfifo_dout	cons_buf.v	/^wire	[15:0]	cfifo_dout;$/;"	n
cfifo_empty	cons_buf.v	/^wire	cfifo_empty;$/;"	n
cfifo_full	cons_buf.v	/^wire	cfifo_full;$/;"	n
cfifo_rd	cons_buf.v	/^wire	cfifo_rd;$/;"	n
cfifo_rd_1T	cons_buf.v	/^reg	cfifo_rd_1T;$/;"	r
cfifo_rd_cnt	cons_buf.v	/^reg	[`DP_MAXBIT:0]	cfifo_rd_cnt;$/;"	r
cfifo_rd_cnt_nxt	cons_buf.v	/^wire	[`DP_MAXBIT:0]	cfifo_rd_cnt_nxt;$/;"	n
cfifo_wr	cons_buf.v	/^reg	cfifo_wr;$/;"	r
cfifo_wr_cnt	cons_buf.v	/^reg	[`DP_MAXBIT:0]	cfifo_wr_cnt;$/;"	r
cfifo_wr_cnt_nxt	cons_buf.v	/^wire	[`DP_MAXBIT:0]	cfifo_wr_cnt_nxt;$/;"	n
cfifo_wr_nxt	cons_buf.v	/^wire	cfifo_wr_nxt;$/;"	n
ch0_offset	capture.v	/^reg	[7:0]	ch0_offset = 8'h0;$/;"	r
ch0_offset_nxt	capture.v	/^wire	[7:0]	ch0_offset_nxt;$/;"	n
ch0_sign	capture.v	/^reg			ch0_sign = 1'b0;$/;"	r
ch0_sign_nxt	capture.v	/^wire			ch0_sign_nxt;$/;"	n
ch1_offset	capture.v	/^reg	[7:0]	ch1_offset = 8'h0;$/;"	r
ch1_offset_nxt	capture.v	/^wire	[7:0]	ch1_offset_nxt;$/;"	n
ch1_sign	capture.v	/^reg			ch1_sign = 1'b0;$/;"	r
ch1_sign_nxt	capture.v	/^wire			ch1_sign_nxt;$/;"	n
clearStartStopDet	i2c/i2cSlave.v	/^wire clearStartStopDet;$/;"	n
clearStartStopDet	i2c/serialInterface.v	/^output  clearStartStopDet;$/;"	p
clearStartStopDet	i2c/serialInterface.v	/^reg     clearStartStopDet, next_clearStartStopDet;$/;"	r
clk	i2c/i2cSlave.v	/^input clk;$/;"	p
clk	i2c/serialInterface.v	/^input   clk;$/;"	p
clk	i2c/serialInterface.v	/^wire    clk;$/;"	n
clk	ipcore_dir/cfifo.v	/^input clk;$/;"	p
clk	ipcore_dir/cmd_fifo.v	/^input clk;$/;"	p
clk0	ipcore_dir/int_skew_dcm.v	/^  wire clk0;$/;"	n
clk0	ipcore_dir/out_skew_dcm.v	/^  wire clk0;$/;"	n
clk2x	ipcore_dir/in_dcm.v	/^  wire clk2x;$/;"	n
clk_120M	DSLogic_top.v	/^wire	clk_120M;$/;"	n
clk_48M	DSLogic_top.v	/^wire	clk_48M;$/;"	n
clkfb	ipcore_dir/in_dcm.v	/^  wire clkfb;$/;"	n
clkfb	ipcore_dir/int_skew_dcm.v	/^  wire clkfb;$/;"	n
clkfb	ipcore_dir/out_skew_dcm.v	/^  wire clkfb;$/;"	n
clkfb_bufg_out	ipcore_dir/out_skew_dcm.v	/^  wire clkfb_bufg_out;$/;"	n
clkfb_bufg_out_n	ipcore_dir/out_skew_dcm.v	/^  wire clkfb_bufg_out_n;$/;"	n
clkfb_ibuf2bufio2fb	ipcore_dir/out_skew_dcm.v	/^  wire clkfb_ibuf2bufio2fb;$/;"	n
clkfb_in_buf_out	ipcore_dir/out_skew_dcm.v	/^  wire clkfb_in_buf_out;$/;"	n
clkfb_oddr_out	ipcore_dir/out_skew_dcm.v	/^  wire clkfb_oddr_out;$/;"	n
clkfbout	ipcore_dir/adc_dcm.v	/^  wire        clkfbout;$/;"	n
clkfbout	ipcore_dir/core_dcm.v	/^  wire        clkfbout;$/;"	n
clkfbout_buf	ipcore_dir/adc_dcm.v	/^  wire        clkfbout_buf;$/;"	n
clkfbout_buf	ipcore_dir/core_dcm.v	/^  wire        clkfbout_buf;$/;"	n
clkfx	ipcore_dir/in_dcm.v	/^  wire clkfx;$/;"	n
clkout2_unused	ipcore_dir/adc_dcm.v	/^  wire        clkout2_unused;$/;"	n
clkout3_unused	ipcore_dir/adc_dcm.v	/^  wire        clkout3_unused;$/;"	n
clkout4_unused	ipcore_dir/adc_dcm.v	/^  wire        clkout4_unused;$/;"	n
clkout5_unused	ipcore_dir/adc_dcm.v	/^  wire        clkout5_unused;$/;"	n
clkout5_unused	ipcore_dir/core_dcm.v	/^  wire        clkout5_unused;$/;"	n
clock	uart/baud_gen.v	/^input 			clock;		\/\/ global clock input $/;"	p
clock	uart/uart_rx.v	/^input 			clock;			\/\/ global clock input $/;"	p
clock	uart/uart_top.v	/^input 			clock;			\/\/ global clock input $/;"	p
clock	uart/uart_tx.v	/^input 			clock;			\/\/ global clock input $/;"	p
clr_rst	reset.v	/^wire	clr_rst;$/;"	n
cmd2dso	dso_ctl.v	/^wire	cmd2dso;$/;"	n
cmd2sampleDivider	dso_ctl.v	/^wire	cmd2sampleDivider;$/;"	n
cmd2setZero	dso_ctl.v	/^wire	cmd2setZero;$/;"	n
cmd2triggerPos	dso_ctl.v	/^wire	cmd2triggerPos;$/;"	n
cmd2triggerSlope	dso_ctl.v	/^wire	cmd2triggerSlope;$/;"	n
cmd2triggerSource	dso_ctl.v	/^wire	cmd2triggerSource;$/;"	n
cmd2triggerValue	dso_ctl.v	/^wire	cmd2triggerValue;$/;"	n
cmd_fifo	ipcore_dir/cmd_fifo.v	/^module cmd_fifo($/;"	m
cnt	rle.v	/^reg     [14:0] cnt;     \/\/counter of the equal samples in series$/;"	r
cons_buf	cons_buf.v	/^module cons_buf ($/;"	m
cons_done	dwrite.v	/^reg	cons_done;$/;"	r
cons_done_nxt	dwrite.v	/^wire	cons_done_nxt;$/;"	n
cons_mode	DSLogic_top.v	/^wire		cons_mode;$/;"	n
cons_mode	capture.v	/^	input		cons_mode,$/;"	p
cons_mode	cons_buf.v	/^	input					cons_mode,$/;"	p
core_clk	DSLogic_top.v	/^wire		core_clk;$/;"	n
core_clk	capture.v	/^	input	core_clk,$/;"	p
core_clk	cfg.v	/^	input    core_clk,$/;"	p
core_clk	cons_buf.v	/^	input					core_clk,$/;"	p
core_clk	dso_ctl.v	/^	input    core_clk,$/;"	p
core_clk	dwrite.v	/^	input	core_clk,$/;"	p
core_clk	loopback.v	/^	input	core_clk,$/;"	p
core_clk	reset.v	/^	input	core_clk,$/;"	p
core_clk	rle.v	/^	input   core_clk,$/;"	p
core_clk	sample.v	/^	input	core_clk,$/;"	p
core_clk	trigger.v	/^	input				core_clk,$/;"	p
core_dcm	ipcore_dir/core_dcm.v	/^module core_dcm$/;"	m
core_dcm_locked	DSLogic_top.v	/^wire	core_dcm_locked;$/;"	n
core_done	dwrite.v	/^reg	core_done;$/;"	r
core_done_nxt	dwrite.v	/^wire	core_done_nxt;$/;"	n
core_rst	DSLogic_top.v	/^wire		core_rst;$/;"	n
core_rst	reset.v	/^	output	core_rst,$/;"	p
core_rst_reg	reset.v	/^reg	[3:0]	core_rst_reg;$/;"	r
core_rst_reg_nxt	reset.v	/^wire	[3:0]	core_rst_reg_nxt;$/;"	n
count16	uart/uart_rx.v	/^reg [3:0]	count16;$/;"	r
count16	uart/uart_tx.v	/^reg [3:0]	count16;$/;"	r
count_cfg_empty	cfg.v	/^wire	count_cfg_empty;$/;"	n
count_dout	cfg.v	/^wire	[17:0]	count_dout;$/;"	n
counter	uart/baud_gen.v	/^reg [15:0]	counter;$/;"	r
cur_cmp_data	trigger.v	/^reg	[15:0]	cur_cmp_data = 16'b0;$/;"	r
cur_cmp_data_nxt	trigger.v	/^wire	[15:0]	cur_cmp_data_nxt;$/;"	n
cur_cmp_valid	trigger.v	/^reg				cur_cmp_valid = 1'b0;$/;"	r
cur_edge	trigger.v	/^wire	[15:0]	cur_edge;$/;"	n
cur_trig_and0	trigger.v	/^reg				cur_trig_and0 = 1'b1;$/;"	r
cur_trig_and0_nxt	trigger.v	/^wire				cur_trig_and0_nxt;$/;"	n
cur_trig_and1	trigger.v	/^reg				cur_trig_and1 = 1'b1;$/;"	r
cur_trig_and1_nxt	trigger.v	/^wire				cur_trig_and1_nxt;$/;"	n
cur_trig_and2	trigger.v	/^reg				cur_trig_and2 = 1'b1;$/;"	r
cur_trig_and2_nxt	trigger.v	/^wire				cur_trig_and2_nxt;$/;"	n
cur_trig_and3	trigger.v	/^reg				cur_trig_and3 = 1'b1;$/;"	r
cur_trig_and3_nxt	trigger.v	/^wire				cur_trig_and3_nxt;$/;"	n
cur_trig_count0	trigger.v	/^reg	[15:0]	cur_trig_count0 = 16'b0;$/;"	r
cur_trig_count0_eq0	trigger.v	/^reg				cur_trig_count0_eq0 = 1'b0;$/;"	r
cur_trig_count0_eq0_nxt	trigger.v	/^wire				cur_trig_count0_eq0_nxt;$/;"	n
cur_trig_count0_nxt	trigger.v	/^wire	[15:0]	cur_trig_count0_nxt;$/;"	n
cur_trig_count1	trigger.v	/^reg	[15:0]	cur_trig_count1 = 16'b0;$/;"	r
cur_trig_count1_eq0	trigger.v	/^reg				cur_trig_count1_eq0 = 1'b0;$/;"	r
cur_trig_count1_eq0_nxt	trigger.v	/^wire				cur_trig_count1_eq0_nxt;$/;"	n
cur_trig_count1_nxt	trigger.v	/^wire	[15:0]	cur_trig_count1_nxt;$/;"	n
cur_trig_count2	trigger.v	/^reg	[15:0]	cur_trig_count2 = 16'b0;$/;"	r
cur_trig_count2_eq0	trigger.v	/^reg				cur_trig_count2_eq0 = 1'b0;$/;"	r
cur_trig_count2_eq0_nxt	trigger.v	/^wire				cur_trig_count2_eq0_nxt;$/;"	n
cur_trig_count2_nxt	trigger.v	/^wire	[15:0]	cur_trig_count2_nxt;$/;"	n
cur_trig_count3	trigger.v	/^reg	[15:0]	cur_trig_count3 = 16'b0;$/;"	r
cur_trig_count3_eq0	trigger.v	/^reg				cur_trig_count3_eq0 = 1'b0;$/;"	r
cur_trig_count3_eq0_nxt	trigger.v	/^wire				cur_trig_count3_eq0_nxt;$/;"	n
cur_trig_count3_nxt	trigger.v	/^wire	[15:0]	cur_trig_count3_nxt;$/;"	n
cur_trig_edge0	trigger.v	/^reg	[15:0]	cur_trig_edge0 = 16'b0;$/;"	r
cur_trig_edge0_nxt	trigger.v	/^wire	[15:0]	cur_trig_edge0_nxt;$/;"	n
cur_trig_edge1	trigger.v	/^reg	[15:0]	cur_trig_edge1 = 16'b0;$/;"	r
cur_trig_edge1_nxt	trigger.v	/^wire	[15:0]	cur_trig_edge1_nxt;$/;"	n
cur_trig_edge2	trigger.v	/^reg	[15:0]	cur_trig_edge2 = 16'b0;$/;"	r
cur_trig_edge2_nxt	trigger.v	/^wire	[15:0]	cur_trig_edge2_nxt;$/;"	n
cur_trig_edge3	trigger.v	/^reg	[15:0]	cur_trig_edge3 = 16'b0;$/;"	r
cur_trig_edge3_nxt	trigger.v	/^wire	[15:0]	cur_trig_edge3_nxt;$/;"	n
cur_trig_inv0	trigger.v	/^reg				cur_trig_inv0 = 1'b0;$/;"	r
cur_trig_inv0_nxt	trigger.v	/^wire				cur_trig_inv0_nxt;$/;"	n
cur_trig_inv1	trigger.v	/^reg				cur_trig_inv1 = 1'b0;$/;"	r
cur_trig_inv1_nxt	trigger.v	/^wire				cur_trig_inv1_nxt;$/;"	n
cur_trig_inv2	trigger.v	/^reg				cur_trig_inv2 = 1'b0;$/;"	r
cur_trig_inv2_nxt	trigger.v	/^wire				cur_trig_inv2_nxt;$/;"	n
cur_trig_inv3	trigger.v	/^reg				cur_trig_inv3 = 1'b0;$/;"	r
cur_trig_inv3_nxt	trigger.v	/^wire				cur_trig_inv3_nxt;$/;"	n
cur_trig_mask0	trigger.v	/^reg	[15:0]	cur_trig_mask0 = 16'b0;$/;"	r
cur_trig_mask0_nxt	trigger.v	/^wire	[15:0]	cur_trig_mask0_nxt;$/;"	n
cur_trig_mask1	trigger.v	/^reg	[15:0]	cur_trig_mask1 = 16'b0;$/;"	r
cur_trig_mask1_nxt	trigger.v	/^wire	[15:0]	cur_trig_mask1_nxt;$/;"	n
cur_trig_mask2	trigger.v	/^reg	[15:0]	cur_trig_mask2 = 16'b0;$/;"	r
cur_trig_mask2_nxt	trigger.v	/^wire	[15:0]	cur_trig_mask2_nxt;$/;"	n
cur_trig_mask3	trigger.v	/^reg	[15:0]	cur_trig_mask3 = 16'b0;$/;"	r
cur_trig_mask3_nxt	trigger.v	/^wire	[15:0]	cur_trig_mask3_nxt;$/;"	n
cur_trig_value0	trigger.v	/^reg	[15:0]	cur_trig_value0 = 16'b0;$/;"	r
cur_trig_value0_nxt	trigger.v	/^wire	[15:0]	cur_trig_value0_nxt;$/;"	n
cur_trig_value1	trigger.v	/^reg	[15:0]	cur_trig_value1 = 16'b0;$/;"	r
cur_trig_value1_nxt	trigger.v	/^wire	[15:0]	cur_trig_value1_nxt;$/;"	n
cur_trig_value2	trigger.v	/^reg	[15:0]	cur_trig_value2 = 16'b0;$/;"	r
cur_trig_value2_nxt	trigger.v	/^wire	[15:0]	cur_trig_value2_nxt;$/;"	n
cur_trig_value3	trigger.v	/^reg	[15:0]	cur_trig_value3 = 16'b0;$/;"	r
cur_trig_value3_nxt	trigger.v	/^wire	[15:0]	cur_trig_value3_nxt;$/;"	n
d_auto_ref	sdramc/sdram_ctl.v	/^     d_auto_ref;$/;"	r
d_burst_term	sdramc/sdram_ctl.v	/^reg  d_precharge, d_idle, d_set_mode, d_burst_term,$/;"	r
d_idle	sdramc/sdram_ctl.v	/^reg  d_precharge, d_idle, d_set_mode, d_burst_term,$/;"	r
d_init_cnt	sdramc/sdram_ctl.v	/^reg q_init_cnt = 1'b0,    d_init_cnt;$/;"	r
d_init_finished	sdramc/sdram_ctl.v	/^reg init_finished = 1'b0, d_init_finished;$/;"	r
d_page_boundary	sdramc/sdram_ctl.v	/^reg d_page_boundary;$/;"	r
d_precharge	sdramc/sdram_ctl.v	/^reg  d_precharge, d_idle, d_set_mode, d_burst_term,$/;"	r
d_row_active	sdramc/sdram_ctl.v	/^wire d_row_active = (D_SD == SD_ROW_ACTIVE); $/;"	n
d_set_mode	sdramc/sdram_ctl.v	/^reg  d_precharge, d_idle, d_set_mode, d_burst_term,$/;"	r
d_wr	sdramc/sdram_ctl.v	/^wire d_wr = (D_SD == SD_WRITE);$/;"	n
dataFromRegIF	dso_ctl.v	/^wire	[7:0]	dataFromRegIF;$/;"	n
dataFromRegIF	i2c/i2cSlave.v	/^input [7:0] dataFromRegIF;$/;"	p
dataIn	i2c/serialInterface.v	/^input   [7:0]dataIn;$/;"	p
dataIn	i2c/serialInterface.v	/^wire    [7:0]dataIn;$/;"	n
dataOut	i2c/serialInterface.v	/^output  [7:0]dataOut;$/;"	p
dataOut	i2c/serialInterface.v	/^reg     [7:0]dataOut, next_dataOut;$/;"	r
dataToRegIF	dso_ctl.v	/^wire	[7:0]	dataToRegIF;$/;"	n
dataToRegIF	i2c/i2cSlave.v	/^output [7:0] dataToRegIF;$/;"	p
data_buf	uart/uart_rx.v	/^reg [7:0]	data_buf;$/;"	r
data_buf	uart/uart_tx.v	/^reg [8:0]	data_buf;$/;"	r
data_count	ipcore_dir/cfifo.v	/^output [12 : 0] data_count;$/;"	p
data_delay	trigger.v	/^reg	[3:0]		data_delay = 4'b0;$/;"	r
data_delay_nxt	trigger.v	/^wire	[3:0]		data_delay_nxt;$/;"	n
data_shift	trigger.v	/^wire	[15:0]	data_shift;$/;"	n
din	ipcore_dir/asyncfifo.v	/^input [15 : 0] din;$/;"	p
din	ipcore_dir/cfifo.v	/^input [15 : 0] din;$/;"	p
din	ipcore_dir/cmd_fifo.v	/^input [7 : 0] din;$/;"	p
din	ipcore_dir/rfifo.v	/^input [15 : 0] din;$/;"	p
din	ipcore_dir/trig_cfg_fifo.v	/^input [17 : 0] din;$/;"	p
din	ipcore_dir/wfifo.v	/^input [15 : 0] din;$/;"	p
div_cnt	cons_buf.v	/^reg	[23:0]	div_cnt;$/;"	r
div_cnt_nxt	cons_buf.v	/^wire	[23:0]	div_cnt_nxt;$/;"	n
do_unused	ipcore_dir/adc_dcm.v	/^  wire [15:0] do_unused;$/;"	n
do_unused	ipcore_dir/core_dcm.v	/^  wire [15:0] do_unused;$/;"	n
dout	ipcore_dir/asyncfifo.v	/^output [15 : 0] dout;$/;"	p
dout	ipcore_dir/cfifo.v	/^output [15 : 0] dout;$/;"	p
dout	ipcore_dir/cmd_fifo.v	/^output [7 : 0] dout;$/;"	p
dout	ipcore_dir/rfifo.v	/^output [15 : 0] dout;$/;"	p
dout	ipcore_dir/trig_cfg_fifo.v	/^output [17 : 0] dout;$/;"	p
dout	ipcore_dir/wfifo.v	/^output [15 : 0] dout;$/;"	p
dr_sample_last_cnt	DSLogic_top.v	/^wire	[31:0]	dr_sample_last_cnt;$/;"	n
dr_sys_en	DSLogic_top.v	/^wire	dr_sys_en;$/;"	n
dr_usb_dout	DSLogic_top.v	/^wire	[15:0]	dr_usb_dout;$/;"	n
dr_usb_rdy	DSLogic_top.v	/^wire				dr_usb_rdy;$/;"	n
drdy_unused	ipcore_dir/adc_dcm.v	/^  wire        drdy_unused;$/;"	n
drdy_unused	ipcore_dir/core_dcm.v	/^  wire        drdy_unused;$/;"	n
dread	dread.v	/^module dread($/;"	m
dso_ctl	dso_ctl.v	/^module dso_ctl($/;"	m
dso_sampleDivider	DSLogic_top.v	/^wire	[23:0]	dso_sampleDivider;$/;"	n
dso_setZero	DSLogic_top.v	/^wire				dso_setZero;$/;"	n
dso_setZero	capture.v	/^	input		dso_setZero,$/;"	p
dso_setZero_done	DSLogic_top.v	/^wire				dso_setZero_done;$/;"	n
dso_setZero_done_nxt	capture.v	/^wire			dso_setZero_done_nxt;$/;"	n
dso_setZero_nxt	dso_ctl.v	/^wire	dso_setZero_nxt;$/;"	n
dso_triggerPos	DSLogic_top.v	/^wire	[23:0]	dso_triggerPos;$/;"	n
dso_triggerPos	cons_buf.v	/^	input		[23:0]	dso_triggerPos,$/;"	p
dso_triggerSlope	DSLogic_top.v	/^wire	[7:0]		dso_triggerSlope;$/;"	n
dso_triggerSlope	dso_ctl.v	/^	output	[7:0]		dso_triggerSlope,$/;"	p
dso_triggerSource	DSLogic_top.v	/^wire	[7:0]		dso_triggerSource;$/;"	n
dso_triggerSource	cons_buf.v	/^	input		[7:0]		dso_triggerSource,$/;"	p
dso_triggerValue	DSLogic_top.v	/^wire	[15:0]	dso_triggerValue;$/;"	n
dso_zero	capture.v	/^reg			dso_zero = 1'b0;$/;"	r
dso_zero_cnt	capture.v	/^reg	[15:0]	dso_zero_cnt = 16'b0;$/;"	r
dso_zero_cnt_nxt	capture.v	/^wire	[15:0]	dso_zero_cnt_nxt;$/;"	n
dso_zero_nxt	capture.v	/^wire			dso_zero_nxt;$/;"	n
dw_capture_data	DSLogic_top.v	/^wire	[15:0]	dw_capture_data;$/;"	n
dw_capture_done	DSLogic_top.v	/^wire				dw_capture_done;$/;"	n
dw_capture_valid	DSLogic_top.v	/^wire				dw_capture_valid;$/;"	n
dw_sample_last_cnt	DSLogic_top.v	/^wire	[31:0]	dw_sample_last_cnt;$/;"	n
dwrite	dwrite.v	/^module dwrite($/;"	m
edge_cfg_empty	cfg.v	/^wire	edge_cfg_empty;$/;"	n
edge_dout	cfg.v	/^wire	[17:0]	edge_dout;$/;"	n
edge_window	trigger.v	/^reg				edge_window = 1'b0;$/;"	r
edge_window_nxt	trigger.v	/^wire				edge_window_nxt;$/;"	n
empty	dso_ctl.v	/^wire	empty;$/;"	n
empty	ipcore_dir/asyncfifo.v	/^output empty;$/;"	p
empty	ipcore_dir/cfifo.v	/^output empty;$/;"	p
empty	ipcore_dir/cmd_fifo.v	/^output empty;$/;"	p
empty	ipcore_dir/rfifo.v	/^output empty;$/;"	p
empty	ipcore_dir/trig_cfg_fifo.v	/^output empty;$/;"	p
empty	ipcore_dir/wfifo.v	/^output empty;$/;"	p
exp_data	loopback.v	/^reg	[15:0]	exp_data;$/;"	r
exp_data_nxt	loopback.v	/^wire	[15:0]	exp_data_nxt;$/;"	n
ext_clk	DSLogic_top.v	/^	inout	ext_clk,$/;"	p
ext_clk_in	DSLogic_top.v	/^wire	ext_clk_in;$/;"	n
ext_clk_mode	DSLogic_top.v	/^wire		ext_clk_mode;$/;"	n
ext_clk_mode	cfg.v	/^	output		ext_clk_mode,$/;"	p
ext_clk_mode	sample.v	/^	input		ext_clk_mode,$/;"	p
ext_clk_oe_oddr	DSLogic_top.v	/^wire	ext_clk_oe_oddr;$/;"	n
ext_clk_out	DSLogic_top.v	/^wire	ext_clk_out;$/;"	n
ext_out	DSLogic_top.v	/^	output		ext_out,$/;"	p
ext_pin_oe	DSLogic_top.v	/^wire	ext_pin_oe;$/;"	n
ext_test_mode	DSLogic_top.v	/^wire		ext_test_mode;$/;"	n
ext_test_mode	cfg.v	/^	output		ext_test_mode,$/;"	p
ext_test_mode	sample.v	/^	input		ext_test_mode,$/;"	p
ext_trig_in	DSLogic_top.v	/^wire	ext_trig_in;$/;"	n
ext_trig_oe_oddr	DSLogic_top.v	/^wire	ext_trig_oe_oddr;$/;"	n
ext_trig_out	DSLogic_top.v	/^wire	ext_trig_out;$/;"	n
falling0	cons_buf.v	/^reg				falling0;$/;"	r
falling0_hit	cons_buf.v	/^reg	falling0_hit;$/;"	r
falling0_hit_nxt	cons_buf.v	/^wire	falling0_hit_nxt;$/;"	n
falling0_nxt	cons_buf.v	/^wire				falling0_nxt;$/;"	n
falling0_req	cons_buf.v	/^reg	falling0_req;$/;"	r
falling0_req_nxt	cons_buf.v	/^wire	falling0_req_nxt;$/;"	n
falling0a1_req	cons_buf.v	/^reg	falling0a1_req;$/;"	r
falling0a1_req_nxt	cons_buf.v	/^wire	falling0a1_req_nxt;$/;"	n
falling0o1_req	cons_buf.v	/^reg	falling0o1_req;$/;"	r
falling0o1_req_nxt	cons_buf.v	/^wire	falling0o1_req_nxt;$/;"	n
falling1	cons_buf.v	/^reg				falling1;$/;"	r
falling1_hit	cons_buf.v	/^reg	falling1_hit;	$/;"	r
falling1_hit_nxt	cons_buf.v	/^wire	falling1_hit_nxt;$/;"	n
falling1_nxt	cons_buf.v	/^wire				falling1_nxt;$/;"	n
falling1_req	cons_buf.v	/^reg	falling1_req;$/;"	r
falling1_req_nxt	cons_buf.v	/^wire	falling1_req_nxt;$/;"	n
falling_mode	DSLogic_top.v	/^wire		falling_mode;$/;"	n
falling_mode	cfg.v	/^	output		falling_mode,$/;"	p
fps_cnt	cons_buf.v	/^reg	[23:0]	fps_cnt;$/;"	r
fps_cnt_nxt	cons_buf.v	/^wire	[23:0]	fps_cnt_nxt;$/;"	n
full	ipcore_dir/asyncfifo.v	/^output full;$/;"	p
full	ipcore_dir/cfifo.v	/^output full;$/;"	p
full	ipcore_dir/cmd_fifo.v	/^output full;$/;"	p
full	ipcore_dir/rfifo.v	/^output full;$/;"	p
full	ipcore_dir/trig_cfg_fifo.v	/^output full;$/;"	p
full	ipcore_dir/wfifo.v	/^output full;$/;"	p
full_speed	DSLogic_top.v	/^wire				full_speed;$/;"	n
full_speed	capture.v	/^	input				full_speed,$/;"	p
full_speed	trigger.v	/^	input				full_speed,$/;"	p
full_speed_nxt	cfg.v	/^wire	full_speed_nxt = (sample_divider == 24'd1);$/;"	n
half_data	sample.v	/^reg	[15:0]	half_data;$/;"	r
half_data_nxt	sample.v	/^wire	[15:0]	half_data_nxt;$/;"	n
half_mode	DSLogic_top.v	/^wire		half_mode;$/;"	n
half_mode	cfg.v	/^	output		half_mode,$/;"	p
half_mode	dread.v	/^	input		half_mode,$/;"	p
half_mode	sample.v	/^	input		half_mode,$/;"	p
header	dread.v	/^reg	[15:0]	header;$/;"	r
header_nxt	dread.v	/^wire	[15:0]	header_nxt;$/;"	n
i2cSlave	i2c/i2cSlave.v	/^module i2cSlave ($/;"	m
in_dcm	ipcore_dir/in_dcm.v	/^module in_dcm$/;"	m
in_dcm_locked	DSLogic_top.v	/^wire	in_dcm_locked;$/;"	n
in_sync	uart/uart_rx.v	/^reg [1:0] in_sync;$/;"	r
inhibit_new_cmd	sdramc/sdram_ctl.v	/^wire inhibit_new_cmd = inhibit_new_cmd_reg;$/;"	n
inhibit_new_cmd_reg	sdramc/sdram_ctl.v	/^reg  inhibit_new_cmd_reg = 1'b0;$/;"	r
inhibit_rw	sdramc/sdram_ctl.v	/^wire inhibit_rw = inhibit_rw_reg;$/;"	n
inhibit_rw_reg	sdramc/sdram_ctl.v	/^reg inhibit_rw_reg = 1'b0;$/;"	r
init_counter	sdramc/sdram_init.v	/^reg     [15:0]  init_counter;$/;"	r
init_counter_done	sdramc/sdram_init.v	/^wire    init_counter_done;$/;"	n
init_done	loopback.v	/^reg	init_done;$/;"	r
init_finished	sdramc/sdram_ctl.v	/^reg init_finished = 1'b0, d_init_finished;$/;"	r
inout	DSLogic_top.v	/^	inout		ext_trig,$/;"	p
inout	DSLogic_top.v	/^	inout		sda,$/;"	p
inout	DSLogic_top.v	/^	inout	[15:0]	sd_dq,$/;"	p
inout	dso_ctl.v	/^	inout    sda,$/;"	p
input	DSLogic_top.v	/^	input		usb_rdwr,$/;"	p
input	DSLogic_top.v	/^	input	[15:0]	ext_data,$/;"	p
input	DSLogic_top.v	/^	input	sys_en,$/;"	p
input	DSLogic_top.v	/^	input	sys_rst,$/;"	p
input	DSLogic_top.v	/^	input cclk,$/;"	p
input	capture.v	/^	input		sample_en,$/;"	p
input	capture.v	/^	input		sample_valid,$/;"	p
input	capture.v	/^	input		trig_en,$/;"	p
input	capture.v	/^	input		wireless_mode,$/;"	p
input	capture.v	/^	input	[31:0]	sample_depth,$/;"	p
input	capture.v	/^	input	[31:0]	sample_real_start,$/;"	p
input	capture.v	/^	input	[31:0]	trig_set_pos_minus1,$/;"	p
input	capture.v	/^	input	[3:0]	trig_dly,$/;"	p
input	capture.v	/^	input	core_rst,$/;"	p
input	capture.v	/^	input  [24:0]  rle_sample_cnt$/;"	p
input	cfg.v	/^	input			capture_done,$/;"	p
input	cfg.v	/^	input		usb_rst,$/;"	p
input	cfg.v	/^	input		usb_wr,$/;"	p
input	cfg.v	/^	input    core_rst,$/;"	p
input	cons_buf.v	/^	input					capture_valid,$/;"	p
input	cons_buf.v	/^	input					core_rst,$/;"	p
input	cons_buf.v	/^	input					sample_en,$/;"	p
input	cons_buf.v	/^	input					wr_done,$/;"	p
input	cons_buf.v	/^	input		[15:0]	sd_rd_data$/;"	p
input	cons_buf.v	/^	input		[16:0]	dso_triggerValue,$/;"	p
input	cons_buf.v	/^	input		[23:0]	dso_sampleDivider,$/;"	p
input	cons_buf.v	/^	input		[7:0]		dso_triggerSlope,$/;"	p
input	cons_buf.v	/^	input   				sd_rst,$/;"	p
input	dread.v	/^	input		[15:0]	rd_data$/;"	p
input	dread.v	/^	input		quarter_mode,$/;"	p
input	dread.v	/^	input		read_start,$/;"	p
input	dread.v	/^	input		usb_rd,$/;"	p
input	dread.v	/^	input	[31:0]	sample_last_cnt,$/;"	p
input	dread.v	/^	input	[31:0]	trig_real_pos,$/;"	p
input	dread.v	/^	input	sdram_rst,$/;"	p
input	dread.v	/^	input	usb_rst,$/;"	p
input	dso_ctl.v	/^	input    core_rst,$/;"	p
input	dwrite.v	/^	input				 rle_en,$/;"	p
input	dwrite.v	/^	input		capture_valid,$/;"	p
input	dwrite.v	/^	input	[31:0]	sample_last_cnt,$/;"	p
input	dwrite.v	/^	input	cons_mode,$/;"	p
input	dwrite.v	/^	input	core_rst,$/;"	p
input	dwrite.v	/^	input	sdram_rst,$/;"	p
input	ipcore_dir/adc_dcm.v	/^  input         RESET,$/;"	p
input	ipcore_dir/in_dcm.v	/^  input         RESET,$/;"	p
input	ipcore_dir/out_skew_dcm.v	/^  input         CLKFB_IN,$/;"	p
input	loopback.v	/^	input				sd_dcm1_locked,$/;"	p
input	loopback.v	/^	input			sd_init_done,$/;"	p
input	loopback.v	/^	input		[15:0]	usb_rdata,$/;"	p
input	loopback.v	/^	input	core_rst,$/;"	p
input	loopback.v	/^	input	mux,$/;"	p
input	loopback.v	/^	input	sdram_rst,$/;"	p
input	loopback.v	/^	input	usb_rst,$/;"	p
input	reset.v	/^	input	sample_clk,$/;"	p
input	reset.v	/^	input	sys_clr,$/;"	p
input	reset.v	/^	input	usb_clk,$/;"	p
input	rle.v	/^	input   [15:0]  capture_data,$/;"	p
input	rle.v	/^	input   core_rst,$/;"	p
input	sample.v	/^	input		[15:0]	ext_data,$/;"	p
input	sample.v	/^	input		cons_mode,$/;"	p
input	sample.v	/^	input		ext_trig_in,$/;"	p
input	sample.v	/^	input		falling_mode,$/;"	p
input	sample.v	/^	input		sample_en,$/;"	p
input	sample.v	/^	input		test_mode,$/;"	p
input	sample.v	/^	input		wireless_mode,$/;"	p
input	sample.v	/^	input	core_rst,$/;"	p
input	sample.v	/^	input	ext_clk,$/;"	p
input	sample.v	/^	input	int_clk,$/;"	p
input	sdramc/mem_ctrl.v	/^	input   sdram_rst_,$/;"	p
input	sdramc/mem_ctrl.v	/^    	input  	[15:0]  wr_data,$/;"	p
input	sdramc/sdram_init.v	/^    input       sdram_rst_,$/;"	p
input	sdramc/sdram_io.v	/^    input               sdram_cke,$/;"	p
input	sdramc/sdram_io.v	/^    input               sdram_ras_,$/;"	p
input	sdramc/sdram_io.v	/^    input               sdram_we_,$/;"	p
input	sdramc/sdram_io.v	/^    input       [12:0]  sdram_addr,$/;"	p
input	sdramc/sdram_io.v	/^    input       [15:0]  sdram_dqo,$/;"	p
input	trigger.v	/^	input				capture_done,$/;"	p
input	trigger.v	/^	input				core_rst,$/;"	p
input	trigger.v	/^	input				sample_valid,$/;"	p
input	trigger.v	/^	input				trig_count_wr,$/;"	p
input	trigger.v	/^	input				trig_en,$/;"	p
input	trigger.v	/^	input				trig_value_wr,$/;"	p
input	trigger.v	/^	input	[15:0]	trig_edge,$/;"	p
input	trigger.v	/^	input	[15:0]	trig_mask,$/;"	p
input	trigger.v	/^	input	[1:0]		trig_logic,$/;"	p
input	trigger.v	/^	input	[1:0]		trig_mu,	$/;"	p
int_clk	DSLogic_top.v	/^wire		int_clk;$/;"	n
int_clk_2x	DSLogic_top.v	/^wire		int_clk_2x;$/;"	n
int_clk_2x	sample.v	/^	input	int_clk_2x,$/;"	p
int_clk_mux	sample.v	/^wire	int_clk_mux;$/;"	n
int_skew_dcm	ipcore_dir/int_skew_dcm.v	/^module int_skew_dcm$/;"	m
int_skew_dcm_locked	DSLogic_top.v	/^wire	int_skew_dcm_locked;$/;"	n
iob_addr	sdramc/sdram_io.v	/^reg     [12:0]  iob_addr;$/;"	r
iob_ba	sdramc/sdram_io.v	/^reg     [1:0]   iob_ba;$/;"	r
iob_cas_	sdramc/sdram_io.v	/^reg             iob_cas_;$/;"	r
iob_cke	sdramc/sdram_io.v	/^reg             iob_cke;$/;"	r
iob_cs_	sdramc/sdram_io.v	/^reg             iob_cs_;$/;"	r
iob_dq_oe	sdramc/sdram_io.v	/^reg     [15:0]  iob_dq_oe;$/;"	r
iob_dqi	sdramc/sdram_io.v	/^wire    [15:0]  iob_dqi;$/;"	n
iob_dqmh	sdramc/sdram_io.v	/^reg				 iob_dqmh;$/;"	r
iob_dqml	sdramc/sdram_io.v	/^reg				 iob_dqml;$/;"	r
iob_dqo	sdramc/sdram_io.v	/^reg     [15:0]  iob_dqo;$/;"	r
iob_ras_	sdramc/sdram_io.v	/^reg             iob_ras_;$/;"	r
iob_we_	sdramc/sdram_io.v	/^reg             iob_we_;$/;"	r
isdram_addr	sdramc/mem_ctrl.v	/^wire	[12:0]  isdram_addr;$/;"	n
isdram_ba	sdramc/mem_ctrl.v	/^wire	[1:0]   isdram_ba; $/;"	n
isdram_cas_	sdramc/mem_ctrl.v	/^wire	        isdram_cas_;$/;"	n
isdram_cke	sdramc/mem_ctrl.v	/^wire	        isdram_cke;$/;"	n
isdram_cs_	sdramc/mem_ctrl.v	/^wire	        isdram_cs_;$/;"	n
isdram_dq_oe	sdramc/mem_ctrl.v	/^wire          isdram_dq_oe;$/;"	n
isdram_dqi	sdramc/mem_ctrl.v	/^wire	[15:0]  isdram_dqi;$/;"	n
isdram_dqm	sdramc/mem_ctrl.v	/^wire			  isdram_dqm;$/;"	n
isdram_dqo	sdramc/mem_ctrl.v	/^wire	[15:0]  isdram_dqo;$/;"	n
isdram_ras_	sdramc/mem_ctrl.v	/^wire	        isdram_ras_;$/;"	n
isdram_we_	sdramc/mem_ctrl.v	/^wire	        isdram_we_;$/;"	n
last_blk_word	sdramc/sdram_ctl.v	/^wire last_blk_word = BURST_CNT_EQ_0 & !FULL_PAGE;$/;"	n
last_dat_cnt	sdramc/sdram_ctl.v	/^reg  [2:0] last_dat_cnt = 3'b0;$/;"	r
last_dat_cnt_EQ_0	sdramc/sdram_ctl.v	/^wire       last_dat_cnt_EQ_0  = (last_dat_cnt == 3'b0);$/;"	n
last_dat_cnt_EQ_1	sdramc/sdram_ctl.v	/^wire       last_dat_cnt_EQ_1  = (last_dat_cnt == 3'd1);$/;"	n
last_dat_cnt_dec_1	sdramc/sdram_ctl.v	/^wire [2:0] last_dat_cnt_dec_1 = (last_dat_cnt  - 1'b1);$/;"	n
ledn	DSLogic_top.v	/^	output	ledn,$/;"	p
ledn	sample.v	/^	output	ledn,$/;"	p
ledn_cnt	sample.v	/^reg	[19:0]	ledn_cnt;$/;"	r
ledn_cnt_nxt	sample.v	/^wire	[19:0]	ledn_cnt_nxt;$/;"	n
locked_int	ipcore_dir/in_dcm.v	/^  wire        locked_int;$/;"	n
locked_int	ipcore_dir/int_skew_dcm.v	/^  wire        locked_int;$/;"	n
locked_int	ipcore_dir/out_skew_dcm.v	/^  wire        locked_int;$/;"	n
logic_cfg_empty	cfg.v	/^wire	logic_cfg_empty;$/;"	n
logic_dout	cfg.v	/^wire	[17:0]	logic_dout;$/;"	n
loop0	capture.v	/^reg	loop0;$/;"	r
loop0_nxt	capture.v	/^wire	loop0_nxt;$/;"	n
loopback	loopback.v	/^module loopback($/;"	m
lpb_capture_data	DSLogic_top.v	/^wire	[15:0]	lpb_capture_data;$/;"	n
lpb_capture_done	DSLogic_top.v	/^wire				lpb_capture_done;$/;"	n
lpb_capture_valid	DSLogic_top.v	/^wire				lpb_capture_valid;$/;"	n
lpb_cstate	loopback.v	/^reg	[2:0]	lpb_cstate;$/;"	r
lpb_error	DSLogic_top.v	/^wire				lpb_error;$/;"	n
lpb_error_nxt	loopback.v	/^wire				lpb_error_nxt;$/;"	n
lpb_nstate	loopback.v	/^reg	[2:0]	lpb_nstate;$/;"	r
lpb_read	DSLogic_top.v	/^wire				lpb_read;$/;"	n
lpb_read_done	DSLogic_top.v	/^wire				lpb_read_done;$/;"	n
lpb_read_nxt	loopback.v	/^wire	lpb_read_nxt;$/;"	n
lpb_sample_last_cnt	DSLogic_top.v	/^wire	[31:0]	lpb_sample_last_cnt;$/;"	n
lst_rd	sdramc/sdram_ctl.v	/^wire lst_rd = q_rd & ( !RD | page_boundary | inhibit_rw );            \/\/ added 1110$/;"	n
lst_rd_d	sdramc/sdram_ctl.v	/^reg  lst_rd_d = 1'b0;                                                            \/\/ added 1110$/;"	r
mask_cfg_empty	cfg.v	/^wire	mask_cfg_empty;$/;"	n
mask_dout	cfg.v	/^wire	[17:0]	mask_dout;$/;"	n
match_stages	trigger.v	/^reg	[3:0]	match_stages = 4'b0;$/;"	r
match_stages_nxt	trigger.v	/^wire	[3:0]	match_stages_nxt;$/;"	n
match_stages_valid	trigger.v	/^reg			match_stages_valid = 1'b0;$/;"	r
match_stages_valid_nxt	trigger.v	/^wire			match_stages_valid_nxt;$/;"	n
mem_ctrl	sdramc/mem_ctrl.v	/^module mem_ctrl ($/;"	m
mu0_in	trigger.v	/^wire [15:0]	mu0_in = trig_shift ? mu0_out : trig_value;$/;"	n
mu0_match	trigger.v	/^reg	mu0_match = 1'b0;$/;"	r
mu0_match_count	trigger.v	/^wire	mu0_match_count;$/;"	n
mu0_match_nxt	trigger.v	/^wire	mu0_match_nxt;$/;"	n
mu0_out	trigger.v	/^wire	[15:0]	mu0_out;$/;"	n
mu0_shift	trigger.v	/^wire mu0_shift = (trig_value_wr & trig_mu == 2'b00) | trig_shift;$/;"	n
mu0ct_in	trigger.v	/^wire [15:0]	mu0ct_in = trig_shift ? mu0ct_out : trig_count;$/;"	n
mu0ct_out	trigger.v	/^wire	[15:0]	mu0ct_out;$/;"	n
mu0ct_shift	trigger.v	/^wire mu0ct_shift = (trig_count_wr & trig_mu == 2'b00) | trig_shift;$/;"	n
mu0eg_in	trigger.v	/^wire [15:0]	mu0eg_in = trig_shift ? mu0eg_out : trig_edge;$/;"	n
mu0eg_out	trigger.v	/^wire	[15:0]	mu0eg_out;$/;"	n
mu0eg_shift	trigger.v	/^wire mu0eg_shift = (trig_edge_wr & trig_mu == 2'b00) | trig_shift;$/;"	n
mu0lg_in	trigger.v	/^wire [1:0]	mu0lg_in = trig_shift ? mu0lg_out : trig_logic;$/;"	n
mu0lg_out	trigger.v	/^wire	[1:0]	mu0lg_out;$/;"	n
mu0lg_shift	trigger.v	/^wire mu0lg_shift = (trig_logic_wr & trig_mu == 2'b00) | trig_shift;$/;"	n
mu0mk_in	trigger.v	/^wire [15:0]	mu0mk_in = trig_shift ? mu0mk_out : trig_mask;$/;"	n
mu0mk_out	trigger.v	/^wire	[15:0]	mu0mk_out;$/;"	n
mu0mk_shift	trigger.v	/^wire mu0mk_shift = (trig_mask_wr & trig_mu == 2'b00) | trig_shift;$/;"	n
mu1_in	trigger.v	/^wire [15:0]	mu1_in = trig_shift ? mu1_out : trig_value;$/;"	n
mu1_match	trigger.v	/^reg	mu1_match = 1'b0;$/;"	r
mu1_match_count	trigger.v	/^wire	mu1_match_count;$/;"	n
mu1_match_nxt	trigger.v	/^wire	mu1_match_nxt;$/;"	n
mu1_out	trigger.v	/^wire	[15:0]	mu1_out;$/;"	n
mu1_shift	trigger.v	/^wire mu1_shift = (trig_value_wr & trig_mu == 2'b01) | trig_shift;$/;"	n
mu1ct_in	trigger.v	/^wire [15:0]	mu1ct_in = trig_shift ? mu1ct_out : trig_count;$/;"	n
mu1ct_out	trigger.v	/^wire	[15:0]	mu1ct_out;$/;"	n
mu1ct_shift	trigger.v	/^wire mu1ct_shift = (trig_count_wr & trig_mu == 2'b01) | trig_shift;$/;"	n
mu1eg_in	trigger.v	/^wire [15:0]	mu1eg_in = trig_shift ? mu1eg_out : trig_edge;$/;"	n
mu1eg_out	trigger.v	/^wire	[15:0]	mu1eg_out;$/;"	n
mu1eg_shift	trigger.v	/^wire mu1eg_shift = (trig_edge_wr & trig_mu == 2'b01) | trig_shift;$/;"	n
mu1lg_in	trigger.v	/^wire [1:0]	mu1lg_in = trig_shift ? mu1lg_out : trig_logic;$/;"	n
mu1lg_out	trigger.v	/^wire	[1:0]	mu1lg_out;$/;"	n
mu1lg_shift	trigger.v	/^wire mu1lg_shift = (trig_logic_wr & trig_mu == 2'b01) | trig_shift;$/;"	n
mu1mk_in	trigger.v	/^wire [15:0]	mu1mk_in = trig_shift ? mu1mk_out : trig_mask;$/;"	n
mu1mk_out	trigger.v	/^wire	[15:0]	mu1mk_out;$/;"	n
mu1mk_shift	trigger.v	/^wire mu1mk_shift = (trig_mask_wr & trig_mu == 2'b01) | trig_shift;$/;"	n
mu2_in	trigger.v	/^wire [15:0]	mu2_in = trig_shift ? mu2_out : trig_value;$/;"	n
mu2_match	trigger.v	/^reg	mu2_match = 1'b0;$/;"	r
mu2_match_count	trigger.v	/^wire	mu2_match_count;$/;"	n
mu2_match_nxt	trigger.v	/^wire	mu2_match_nxt;$/;"	n
mu2_out	trigger.v	/^wire	[15:0]	mu2_out;$/;"	n
mu2_shift	trigger.v	/^wire mu2_shift = (trig_value_wr & trig_mu == 2'b10) | trig_shift;$/;"	n
mu2ct_in	trigger.v	/^wire [15:0]	mu2ct_in = trig_shift ? mu2ct_out : trig_count;$/;"	n
mu2ct_out	trigger.v	/^wire	[15:0]	mu2ct_out;$/;"	n
mu2ct_shift	trigger.v	/^wire mu2ct_shift = (trig_count_wr & trig_mu == 2'b10) | trig_shift;$/;"	n
mu2eg_in	trigger.v	/^wire [15:0]	mu2eg_in = trig_shift ? mu2eg_out : trig_edge;$/;"	n
mu2eg_out	trigger.v	/^wire	[15:0]	mu2eg_out;$/;"	n
mu2eg_shift	trigger.v	/^wire mu2eg_shift = (trig_edge_wr & trig_mu == 2'b10) | trig_shift;$/;"	n
mu2lg_in	trigger.v	/^wire [1:0]	mu2lg_in = trig_shift ? mu2lg_out : trig_logic;$/;"	n
mu2lg_out	trigger.v	/^wire	[1:0]	mu2lg_out;$/;"	n
mu2lg_shift	trigger.v	/^wire mu2lg_shift = (trig_logic_wr & trig_mu == 2'b10) | trig_shift;$/;"	n
mu2mk_in	trigger.v	/^wire [15:0]	mu2mk_in = trig_shift ? mu2mk_out : trig_mask;$/;"	n
mu2mk_out	trigger.v	/^wire	[15:0]	mu2mk_out;$/;"	n
mu2mk_shift	trigger.v	/^wire mu2mk_shift = (trig_mask_wr & trig_mu == 2'b10) | trig_shift;$/;"	n
mu3_in	trigger.v	/^wire [15:0]	mu3_in = trig_shift ? mu3_out : trig_value;$/;"	n
mu3_match	trigger.v	/^reg	mu3_match = 1'b0;$/;"	r
mu3_match_count	trigger.v	/^wire	mu3_match_count;$/;"	n
mu3_match_nxt	trigger.v	/^wire	mu3_match_nxt;$/;"	n
mu3_out	trigger.v	/^wire	[15:0]	mu3_out;$/;"	n
mu3_shift	trigger.v	/^wire mu3_shift = (trig_value_wr & trig_mu == 2'b11) | trig_shift;$/;"	n
mu3ct_in	trigger.v	/^wire [15:0]	mu3ct_in = trig_shift ? mu3ct_out : trig_count;$/;"	n
mu3ct_out	trigger.v	/^wire	[15:0]	mu3ct_out;$/;"	n
mu3ct_shift	trigger.v	/^wire mu3ct_shift = (trig_count_wr & trig_mu == 2'b11) | trig_shift;$/;"	n
mu3eg_in	trigger.v	/^wire [15:0]	mu3eg_in = trig_shift ? mu3eg_out : trig_edge;$/;"	n
mu3eg_out	trigger.v	/^wire	[15:0]	mu3eg_out;$/;"	n
mu3eg_shift	trigger.v	/^wire mu3eg_shift = (trig_edge_wr & trig_mu == 2'b11) | trig_shift;$/;"	n
mu3lg_in	trigger.v	/^wire [1:0]	mu3lg_in = trig_shift ? mu3lg_out : trig_logic;$/;"	n
mu3lg_out	trigger.v	/^wire	[1:0]	mu3lg_out;$/;"	n
mu3lg_shift	trigger.v	/^wire mu3lg_shift = (trig_logic_wr & trig_mu == 2'b11) | trig_shift;$/;"	n
mu3mk_in	trigger.v	/^wire [15:0]	mu3mk_in = trig_shift ? mu3mk_out : trig_mask;$/;"	n
mu3mk_out	trigger.v	/^wire	[15:0]	mu3mk_out;$/;"	n
mu3mk_shift	trigger.v	/^wire mu3mk_shift = (trig_mask_wr & trig_mu == 2'b11) | trig_shift;$/;"	n
mu_all_match	trigger.v	/^reg	mu_all_match = 1'b0;$/;"	r
mu_all_match_nxt	trigger.v	/^wire	mu_all_match_nxt;$/;"	n
mux_sync	loopback.v	/^reg	mux_sync;$/;"	r
mux_trig	loopback.v	/^reg	mux_trig;$/;"	r
neg_data	sample.v	/^reg	[15:0]	neg_data;$/;"	r
neg_data_1T	sample.v	/^reg	[15:0]	neg_data_1T;$/;"	r
neg_data_2T	sample.v	/^reg	[15:0]	neg_data_2T;$/;"	r
neg_data_final	sample.v	/^reg	[15:0]	neg_data_final;$/;"	r
neg_data_pos	sample.v	/^reg	[15:0]	neg_data_pos;$/;"	r
neg_sync_data	sample.v	/^wire	[15:0]	neg_sync_data;$/;"	n
new_rx_data	dso_ctl.v	/^wire	new_rx_data;$/;"	n
new_rx_data	uart/uart_rx.v	/^output 			new_rx_data;	\/\/ signs that a new byte was received $/;"	p
new_rx_data	uart/uart_rx.v	/^reg	new_rx_data;$/;"	r
new_rx_data	uart/uart_top.v	/^output 			new_rx_data;	\/\/ signs that a new byte was received $/;"	p
new_tx_data	dso_ctl.v	/^reg	new_tx_data;$/;"	r
new_tx_data	uart/uart_top.v	/^input			new_tx_data;	\/\/ asserted to indicate that there is a new data byte for transmission $/;"	p
new_tx_data	uart/uart_tx.v	/^input			new_tx_data;	\/\/ asserted to indicate that there is a new data byte for transmission $/;"	p
new_tx_data_nxt	dso_ctl.v	/^wire	new_tx_data_nxt;$/;"	n
next_bitCnt	i2c/serialInterface.v	/^reg  [2:0]bitCnt, next_bitCnt;$/;"	r
next_clearStartStopDet	i2c/serialInterface.v	/^reg     clearStartStopDet, next_clearStartStopDet;$/;"	r
next_dataOut	i2c/serialInterface.v	/^reg     [7:0]dataOut, next_dataOut;$/;"	r
next_regAddr	i2c/serialInterface.v	/^reg     [7:0]regAddr, next_regAddr;$/;"	r
next_rxData	i2c/serialInterface.v	/^reg  [7:0]rxData, next_rxData;$/;"	r
next_sdaOut	i2c/serialInterface.v	/^reg     sdaOut, next_sdaOut;$/;"	r
next_streamSt	i2c/serialInterface.v	/^reg  [1:0]streamSt, next_streamSt;$/;"	r
next_txData	i2c/serialInterface.v	/^reg  [7:0]txData, next_txData;$/;"	r
next_writeEn	i2c/serialInterface.v	/^reg     writeEn, next_writeEn;$/;"	r
old	rle.v	/^reg     [14:0] old;     \/\/Old sample$/;"	r
out_clk	DSLogic_top.v	/^wire		out_clk;$/;"	n
out_skew_dcm	ipcore_dir/out_skew_dcm.v	/^module out_skew_dcm$/;"	m
out_skew_dcm_locked	DSLogic_top.v	/^wire	out_skew_dcm_locked;$/;"	n
output	DSLogic_top.v	/^	output		sd_cas_,$/;"	p
output	DSLogic_top.v	/^	output		sd_cs_$/;"	p
output	DSLogic_top.v	/^	output		sd_dqml,$/;"	p
output	DSLogic_top.v	/^	output		usb_overflow,$/;"	p
output	DSLogic_top.v	/^	output	[12:0]	sd_addr,$/;"	p
output	DSLogic_top.v	/^	output	sd_clk_out,$/;"	p
output	capture.v	/^	output		[15:0]	capture_data,$/;"	p
output	cfg.v	/^	output				trig_count_wr,$/;"	p
output	cfg.v	/^	output				trig_mask_wr,$/;"	p
output	cfg.v	/^	output		cons_mode,$/;"	p
output	cfg.v	/^	output		quarter_mode,$/;"	p
output	cfg.v	/^	output		read_start,$/;"	p
output	cfg.v	/^	output		sd_fbe,$/;"	p
output	cfg.v	/^	output		sd_lpb_mode,$/;"	p
output	cfg.v	/^	output		test_mode,$/;"	p
output	cfg.v	/^	output	[15:0]	trig_count,$/;"	p
output	cfg.v	/^	output	[15:0]	trig_value,$/;"	p
output	cfg.v	/^	output	[1:0]		trig_mu,$/;"	p
output	cfg.v	/^	output	[23:0]	sample_divider,$/;"	p
output	cfg.v	/^	output	[31:0]	sample_depth,$/;"	p
output	cfg.v	/^	output	[3:0]		trig_stages,$/;"	p
output	cfg.v	/^	output	reg	[31:0]	trig_set_pos_minus1,$/;"	p
output	cons_buf.v	/^	output				rd_rdy,$/;"	p
output	cons_buf.v	/^	output				rd_valid,$/;"	p
output	cons_buf.v	/^	output				sd_rd_req,$/;"	p
output	cons_buf.v	/^	output	[31:0]	sd_rd_addr,$/;"	p
output	dread.v	/^	output	[15:0]	usb_rdata,$/;"	p
output	dread.v	/^	output	reg	[31:0]	rd_addr,$/;"	p
output	dread.v	/^	output	rfifo_empty,$/;"	p
output	dso_ctl.v	/^	output	[7:0]		dso_triggerSource,$/;"	p
output	dso_ctl.v	/^	output	uart_tx$/;"	p
output	dwrite.v	/^	output	reg		wr_done,$/;"	p
output	dwrite.v	/^	output  [24:0]  rle_sample_cnt	$/;"	p
output	dwrite.v	/^    	output	           	wr_req,$/;"	p
output	ipcore_dir/adc_dcm.v	/^  output        CLK_OUT1,$/;"	p
output	ipcore_dir/core_dcm.v	/^  output        CLK_OUT1,$/;"	p
output	ipcore_dir/core_dcm.v	/^  output        CLK_OUT3,$/;"	p
output	ipcore_dir/core_dcm.v	/^  output        CLK_OUT5,$/;"	p
output	ipcore_dir/core_dcm.v	/^  output        LOCKED$/;"	p
output	ipcore_dir/in_dcm.v	/^  output        CLK_OUT1,$/;"	p
output	ipcore_dir/int_skew_dcm.v	/^  output        CLK_OUT1,$/;"	p
output	ipcore_dir/int_skew_dcm.v	/^  output        LOCKED$/;"	p
output	ipcore_dir/out_skew_dcm.v	/^  output        CLKFB_OUT,$/;"	p
output	ipcore_dir/out_skew_dcm.v	/^  output        LOCKED$/;"	p
output	loopback.v	/^	output					capture_done,$/;"	p
output	loopback.v	/^	output		[31:0]	sd_saddr,$/;"	p
output	loopback.v	/^	output	reg		lpb_error$/;"	p
output	loopback.v	/^	output	reg		usb_rd,$/;"	p
output	reset.v	/^	output	sample_rst,$/;"	p
output	reset.v	/^	output	sdram_rst_,$/;"	p
output	reset.v	/^	output	usb_rst$/;"	p
output	rle.v	/^	output          rle_valid,$/;"	p
output	sample.v	/^	output	reg		sample_valid$/;"	p
output	sdramc/mem_ctrl.v	/^	output			 sdram_dqmh,$/;"	p
output	sdramc/mem_ctrl.v	/^	output		rd_rdy,$/;"	p
output	sdramc/mem_ctrl.v	/^	output		rd_valid,$/;"	p
output	sdramc/mem_ctrl.v	/^	output		sd_init_done,$/;"	p
output	sdramc/mem_ctrl.v	/^	output          sdram_cs_$/;"	p
output	sdramc/mem_ctrl.v	/^	output          sdram_ras_,$/;"	p
output	sdramc/mem_ctrl.v	/^	output          sdram_we_,$/;"	p
output	sdramc/mem_ctrl.v	/^	output  [1:0]   sdram_ba, $/;"	p
output	sdramc/mem_ctrl.v	/^    	output         	wr_valid,$/;"	p
output	sdramc/sdram_io.v	/^	 output					pad_dqml,$/;"	p
output	sdramc/sdram_io.v	/^    output              pad_cas_,$/;"	p
output	sdramc/sdram_io.v	/^    output              pad_cke,$/;"	p
output	sdramc/sdram_io.v	/^    output      [12:0]  pad_addr,$/;"	p
output	sdramc/sdram_io.v	/^    output      [15:0]  pad_dq_oe,$/;"	p
output	sdramc/sdram_io.v	/^    output      [15:0]  pad_dqo,$/;"	p
output	trigger.v	/^	output	reg	trig_hit = 1'b0$/;"	p
pad_ba	sdramc/sdram_io.v	/^    output      [1:0]   pad_ba, $/;"	p
pad_cs_	sdramc/sdram_io.v	/^    output              pad_cs_$/;"	p
pad_dqi	sdramc/sdram_io.v	/^    input       [15:0]  pad_dqi,$/;"	p
pad_dqmh	sdramc/sdram_io.v	/^	 output					pad_dqmh,$/;"	p
pad_ras_	sdramc/sdram_io.v	/^    output              pad_ras_,$/;"	p
pad_we_	sdramc/sdram_io.v	/^    output              pad_we_,$/;"	p
page_boundary	sdramc/sdram_ctl.v	/^wire page_boundary;$/;"	n
page_boundary_reg	sdramc/sdram_ctl.v	/^reg page_boundary_reg = 1'b0;$/;"	r
pempty	sample.v	/^wire	pempty;$/;"	n
pos_data	sample.v	/^reg	[15:0]	pos_data;$/;"	r
pos_data_1T	sample.v	/^reg	[15:0]	pos_data_1T;$/;"	r
pos_data_2T	sample.v	/^reg	[15:0]	pos_data_2T;$/;"	r
pos_data_final	sample.v	/^reg	[15:0]	pos_data_final;$/;"	r
pos_sync_data	sample.v	/^wire	[15:0]	pos_sync_data;$/;"	n
pre_cmp_data	trigger.v	/^reg	[15:0]	pre_cmp_data = 16'b0;$/;"	r
pre_cmp_data_nxt	trigger.v	/^wire	[15:0]	pre_cmp_data_nxt;$/;"	n
pre_data	sample.v	/^wire	[15:0]	pre_data;$/;"	n
prog_empty	ipcore_dir/asyncfifo.v	/^output prog_empty;$/;"	p
prog_empty	ipcore_dir/wfifo.v	/^output prog_empty;$/;"	p
prog_full	ipcore_dir/asyncfifo.v	/^output prog_full;$/;"	p
prog_full	ipcore_dir/cfifo.v	/^output prog_full;$/;"	p
psdone_unused	ipcore_dir/in_dcm.v	/^  wire        psdone_unused;$/;"	n
psdone_unused	ipcore_dir/int_skew_dcm.v	/^  wire        psdone_unused;$/;"	n
psdone_unused	ipcore_dir/out_skew_dcm.v	/^  wire        psdone_unused;$/;"	n
q_auto_ref	sdramc/sdram_ctl.v	/^     q_rd,        q_wr,   q_auto_ref, q_row_active,$/;"	r
q_burst_term	sdramc/sdram_ctl.v	/^reg  q_precharge, q_idle, q_burst_term,     $/;"	r
q_idle	sdramc/sdram_ctl.v	/^reg  q_precharge, q_idle, q_burst_term,     $/;"	r
q_init_cnt	sdramc/sdram_ctl.v	/^reg q_init_cnt = 1'b0,    d_init_cnt;$/;"	r
q_precharge	sdramc/sdram_ctl.v	/^reg  q_precharge, q_idle, q_burst_term,     $/;"	r
q_rd	sdramc/sdram_ctl.v	/^     q_rd,        q_wr,   q_auto_ref, q_row_active,$/;"	r
q_rd2prech	sdramc/sdram_ctl.v	/^     q_set_mode,  q_rd2prech;$/;"	r
q_row_active	sdramc/sdram_ctl.v	/^     q_rd,        q_wr,   q_auto_ref, q_row_active,$/;"	r
q_rw	sdramc/sdram_ctl.v	/^wire q_rw = q_rd | q_wr;$/;"	n
q_set_mode	sdramc/sdram_ctl.v	/^     q_set_mode,  q_rd2prech;$/;"	r
q_wr	sdramc/sdram_ctl.v	/^     q_rd,        q_wr,   q_auto_ref, q_row_active,$/;"	r
quarter_data	sample.v	/^reg	[15:0]	quarter_data;$/;"	r
quarter_data_nxt	sample.v	/^wire	[15:0]	quarter_data_nxt;$/;"	n
quarter_mode	DSLogic_top.v	/^wire		quarter_mode;$/;"	n
quarter_mode	sample.v	/^	input		quarter_mode,$/;"	p
quarter_toggle	dread.v	/^reg	quarter_toggle;$/;"	r
quarter_toggle_nxt	dread.v	/^wire	quarter_toggle_nxt;$/;"	n
quarter_valid	sample.v	/^reg	quarter_valid;$/;"	r
quarter_valid_nxt	sample.v	/^wire	quarter_valid_nxt;$/;"	n
r00	cfg.v	/^wire	r00 = usb_cfg_rd & (usb_cfg_addr == 5'd0);$/;"	n
r01	cfg.v	/^wire	r01 = usb_cfg_rd & (usb_cfg_addr == 5'd1);$/;"	n
r02	cfg.v	/^wire	r02 = usb_cfg_rd & (usb_cfg_addr == 5'd2);$/;"	n
r03	cfg.v	/^wire	r03 = usb_cfg_rd & (usb_cfg_addr == 5'd3);$/;"	n
r04	cfg.v	/^wire	r04 = usb_cfg_rd & (usb_cfg_addr == 5'd4);$/;"	n
r05	cfg.v	/^wire	r05 = usb_cfg_rd & (usb_cfg_addr == 5'd5);$/;"	n
r06	cfg.v	/^wire	r06 = usb_cfg_rd & (usb_cfg_addr == 5'd6);$/;"	n
r07	cfg.v	/^wire	r07 = usb_cfg_rd & (usb_cfg_addr == 5'd7);$/;"	n
r08	cfg.v	/^wire	r08 = usb_cfg_rd & (usb_cfg_addr == 5'd8);$/;"	n
r09	cfg.v	/^wire	r09 = usb_cfg_rd & (usb_cfg_addr == 5'd9);$/;"	n
r10	cfg.v	/^wire	r10 = usb_cfg_rd & (usb_cfg_addr == 5'd10);$/;"	n
r11	cfg.v	/^wire	r11 = usb_cfg_rd & (usb_cfg_addr == 5'd11);$/;"	n
r12	cfg.v	/^wire	r12 = usb_cfg_rd & (usb_cfg_addr == 5'd12);$/;"	n
r13	cfg.v	/^wire	r13 = usb_cfg_rd & (usb_cfg_addr == 5'd13);$/;"	n
r17	cfg.v	/^wire	r17 = usb_cfg_rd & (usb_cfg_addr == 5'd17);$/;"	n
r18	cfg.v	/^wire	r18 = usb_cfg_rd & (usb_cfg_addr == 5'd18);$/;"	n
r19	cfg.v	/^wire	r19 = usb_cfg_rd & (usb_cfg_addr == 5'd19);$/;"	n
rd_addr	DSLogic_top.v	/^wire	[31:0]	rd_addr;$/;"	n
rd_addr	cons_buf.v	/^	input		[31:0]	rd_addr,$/;"	p
rd_addr	sdramc/mem_ctrl.v	/^	input	[31:0]	rd_addr,$/;"	p
rd_addr_nxt	dread.v	/^wire	[31:0]	rd_addr_nxt;$/;"	n
rd_clk	ipcore_dir/asyncfifo.v	/^input rd_clk;$/;"	p
rd_clk	ipcore_dir/rfifo.v	/^input rd_clk;$/;"	p
rd_clk	ipcore_dir/trig_cfg_fifo.v	/^input rd_clk;$/;"	p
rd_clk	ipcore_dir/wfifo.v	/^input rd_clk;$/;"	p
rd_data	DSLogic_top.v	/^wire	[15:0]	rd_data;$/;"	n
rd_data	cons_buf.v	/^	output	[15:0]	rd_data,$/;"	p
rd_data	sdramc/mem_ctrl.v	/^	output	[15:0]	rd_data,$/;"	p
rd_data_count	ipcore_dir/rfifo.v	/^output [9 : 0] rd_data_count;$/;"	p
rd_en	ipcore_dir/asyncfifo.v	/^input rd_en;$/;"	p
rd_en	ipcore_dir/cfifo.v	/^input rd_en;$/;"	p
rd_en	ipcore_dir/cmd_fifo.v	/^input rd_en;$/;"	p
rd_en	ipcore_dir/rfifo.v	/^input rd_en;$/;"	p
rd_en	ipcore_dir/trig_cfg_fifo.v	/^input rd_en;$/;"	p
rd_en	ipcore_dir/wfifo.v	/^input rd_en;$/;"	p
rd_phase	dread.v	/^reg	rd_phase;$/;"	r
rd_phase	loopback.v	/^reg	rd_phase;$/;"	r
rd_phase_1T	loopback.v	/^reg	rd_phase_1T;$/;"	r
rd_phase_nxt	dread.v	/^wire	rd_phase_nxt;$/;"	n
rd_phase_nxt	loopback.v	/^wire	rd_phase_nxt;$/;"	n
rd_phase_sdram	loopback.v	/^reg	rd_phase_sdram;$/;"	r
rd_phase_sdram_1T	loopback.v	/^reg	rd_phase_sdram_1T;$/;"	r
rd_phase_sync	loopback.v	/^reg	rd_phase_sync;$/;"	r
rd_rdy	DSLogic_top.v	/^wire		rd_rdy;$/;"	n
rd_rdy	dread.v	/^	input			rd_rdy,$/;"	p
rd_req	DSLogic_top.v	/^wire		rd_req;$/;"	n
rd_req	cons_buf.v	/^	input					rd_req,$/;"	p
rd_req	sdramc/mem_ctrl.v	/^	input		rd_req,$/;"	p
rd_req_nxt	dread.v	/^wire	rd_req_nxt;$/;"	n
rd_rst	ipcore_dir/asyncfifo.v	/^input rd_rst;$/;"	p
rd_rst	ipcore_dir/rfifo.v	/^input rd_rst;$/;"	p
rd_rst	ipcore_dir/trig_cfg_fifo.v	/^input rd_rst;$/;"	p
rd_rst	ipcore_dir/wfifo.v	/^input rd_rst;$/;"	p
rd_valid	DSLogic_top.v	/^wire		rd_valid;$/;"	n
rd_valid	dread.v	/^	input			rd_valid,$/;"	p
read_cnt	loopback.v	/^reg	[31:0]	read_cnt;$/;"	r
read_cnt_nxt	loopback.v	/^wire	[31:0]	read_cnt_nxt;$/;"	n
read_header	dread.v	/^reg	read_header;$/;"	r
read_header_nxt	dread.v	/^wire	read_header_nxt;$/;"	n
read_loop	loopback.v	/^reg		read_loop;$/;"	r
read_loop_nxt	loopback.v	/^wire		read_loop_nxt;$/;"	n
read_rdy	cons_buf.v	/^reg	read_rdy;$/;"	r
read_rdy_1T	cons_buf.v	/^reg	read_rdy_1T;$/;"	r
read_rdy_nxt	cons_buf.v	/^wire	read_rdy_nxt;$/;"	n
read_start	DSLogic_top.v	/^wire		read_start;$/;"	n
read_start	cons_buf.v	/^	output				read_start,$/;"	p
read_start	loopback.v	/^	output			read_start,$/;"	p
read_start_cnt	dread.v	/^reg   [7:0]	read_start_cnt;$/;"	r
read_start_cnt_nxt	dread.v	/^wire	[7:0]	read_start_cnt_nxt;$/;"	n
redunt_cnt	cons_buf.v	/^reg	[`DP_MAXBIT:0]	redunt_cnt;$/;"	r
redunt_cnt_nxt	cons_buf.v	/^wire	[`DP_MAXBIT:0]	redunt_cnt_nxt;$/;"	n
redunt_rd	cons_buf.v	/^reg	redunt_rd;$/;"	r
redunt_rd_nxt	cons_buf.v	/^wire	redunt_rd_nxt;$/;"	n
reg	capture.v	/^	output	reg		capture_done,$/;"	p
reg	capture.v	/^	output	reg		dso_setZero_done,$/;"	p
reg	capture.v	/^	output	reg	[31:0]	sd_saddr,$/;"	p
reg	capture.v	/^	output	reg	[31:0]	trig_real_pos,$/;"	p
reg	cfg.v	/^	output	reg		full_speed,$/;"	p
reg	cfg.v	/^	output	reg	[31:0]	sample_last_cnt,$/;"	p
reg	cfg.v	/^	output	reg	[31:0]	sample_real_start,$/;"	p
reg	dread.v	/^	output	reg		rd_req,$/;"	p
reg	dread.v	/^	output	reg	usb_rdy,$/;"	p
reg	dso_ctl.v	/^	output	reg	[15:0]	dso_triggerValue,$/;"	p
reg	dso_ctl.v	/^	output	reg	[23:0]	dso_sampleDivider,$/;"	p
reg	dso_ctl.v	/^	output	reg	[23:0]	dso_triggerPos,$/;"	p
reg	dso_ctl.v	/^	output	reg	dso_setZero,$/;"	p
reg	dwrite.v	/^    	output	reg	[31:0]  wr_addr,$/;"	p
reg	loopback.v	/^	output	reg				capture_valid,$/;"	p
reg	loopback.v	/^	output	reg		lpb_read,$/;"	p
reg	loopback.v	/^	output	reg		read_done,$/;"	p
reg	loopback.v	/^	output	reg	[15:0]	capture_data,$/;"	p
reg	loopback.v	/^	output	reg	sd_clk_en,$/;"	p
reg	loopback.v	/^	output	reg	sd_clk_rst,$/;"	p
reg	loopback.v	/^	output	reg	sd_clk_sel,$/;"	p
reg	sdramc/sdram_init.v	/^    output  reg PAA = 0,$/;"	p
reg	sdramc/sdram_init.v	/^    output  reg SET_MODE$/;"	p
reg	sdramc/sdram_io.v	/^    output  reg [15:0]  sdram_dqi,$/;"	p
regAddr	dso_ctl.v	/^wire	[7:0]	regAddr;$/;"	n
regAddr	i2c/i2cSlave.v	/^output [7:0] regAddr;$/;"	p
regAddr	i2c/serialInterface.v	/^output  [7:0]regAddr;$/;"	p
regAddr	i2c/serialInterface.v	/^reg     [7:0]regAddr, next_regAddr;$/;"	r
rempty	sample.v	/^wire	rempty;$/;"	n
reset	reset.v	/^module reset($/;"	m
reset	uart/baud_gen.v	/^input 			reset;		\/\/ global reset input $/;"	p
reset	uart/uart_rx.v	/^input 			reset;			\/\/ global reset input $/;"	p
reset	uart/uart_top.v	/^input 			reset;			\/\/ global reset input $/;"	p
reset	uart/uart_tx.v	/^input 			reset;			\/\/ global reset input $/;"	p
rfifo	ipcore_dir/rfifo.v	/^module rfifo($/;"	m
rfifo_din	dread.v	/^wire	[15:0]	rfifo_din;$/;"	n
rfifo_dout	dread.v	/^wire	[15:0]	rfifo_dout;$/;"	n
rfifo_full	dread.v	/^	output	rfifo_full,$/;"	p
rfifo_rcnt	dread.v	/^wire	[9:0]	rfifo_rcnt;$/;"	n
rfifo_rd_en	dread.v	/^wire				rfifo_rd_en;$/;"	n
rfifo_rd_rst	dread.v	/^reg				rfifo_rd_rst;$/;"	r
rfifo_rd_rst_sync	dread.v	/^reg				rfifo_rd_rst_sync;$/;"	r
rfifo_wcnt	dread.v	/^wire	[9:0]	rfifo_wcnt;$/;"	n
rfifo_wr_en	dread.v	/^wire				rfifo_wr_en;$/;"	n
rfifo_wr_rst	dread.v	/^reg				rfifo_wr_rst;$/;"	r
rfifo_wr_rst_sync	dread.v	/^reg				rfifo_wr_rst_sync;$/;"	r
rising0	cons_buf.v	/^reg				rising0;$/;"	r
rising0_hit	cons_buf.v	/^reg	rising0_hit;$/;"	r
rising0_hit_nxt	cons_buf.v	/^wire	rising0_hit_nxt;$/;"	n
rising0_nxt	cons_buf.v	/^wire				rising0_nxt;$/;"	n
rising0_req	cons_buf.v	/^reg	rising0_req;$/;"	r
rising0_req_nxt	cons_buf.v	/^wire	rising0_req_nxt;$/;"	n
rising0a1_req	cons_buf.v	/^reg	rising0a1_req;$/;"	r
rising0a1_req_nxt	cons_buf.v	/^wire	rising0a1_req_nxt;$/;"	n
rising0o1_req	cons_buf.v	/^reg	rising0o1_req;$/;"	r
rising0o1_req_nxt	cons_buf.v	/^wire	rising0o1_req_nxt;$/;"	n
rising1	cons_buf.v	/^reg				rising1;$/;"	r
rising1_hit	cons_buf.v	/^reg	rising1_hit;$/;"	r
rising1_hit_nxt	cons_buf.v	/^wire	rising1_hit_nxt;$/;"	n
rising1_nxt	cons_buf.v	/^wire				rising1_nxt;$/;"	n
rising1_req	cons_buf.v	/^reg	rising1_req;$/;"	r
rising1_req_nxt	cons_buf.v	/^wire	rising1_req_nxt;$/;"	n
rle	rle.v	/^module rle($/;"	m
rle_data	dwrite.v	/^wire	[15:0]	rle_data;$/;"	n
rle_data	rle.v	/^	output  [15:0]  rle_data,$/;"	p
rle_data_reg	rle.v	/^reg	  [15:0] rle_data_reg;$/;"	r
rle_en	DSLogic_top.v	/^wire				rle_en;$/;"	n
rle_en	capture.v	/^	input				rle_en,$/;"	p
rle_en	cfg.v	/^	output 		rle_en$/;"	p
rle_sample_cnt	DSLogic_top.v	/^wire  [24:0] 	rle_sample_cnt; $/;"	n
rle_sample_cnt	dwrite.v	/^wire  [24:0] 	rle_sample_cnt; $/;"	n
rle_sample_cnt	rle.v	/^	output  [24:0]  rle_sample_cnt 	$/;"	p
rle_sample_cnt_reg	rle.v	/^reg	  [24:0] rle_sample_cnt_reg; 	$/;"	r
rle_start	rle.v	/^reg				rle_start;$/;"	r
rle_valid	dwrite.v	/^wire 				rle_valid;$/;"	n
rle_valid_reg	rle.v	/^reg	  			rle_valid_reg;$/;"	r
rst	i2c/i2cSlave.v	/^input rst;$/;"	p
rst	i2c/serialInterface.v	/^input   rst;$/;"	p
rst	i2c/serialInterface.v	/^wire    rst;$/;"	n
rst	ipcore_dir/cfifo.v	/^input rst;$/;"	p
rst	ipcore_dir/cmd_fifo.v	/^input rst;$/;"	p
rstPipe	i2c/i2cSlave.v	/^reg [1:0] rstPipe;$/;"	r
rstSyncToClk	i2c/i2cSlave.v	/^wire rstSyncToClk;$/;"	n
rxData	i2c/serialInterface.v	/^reg  [7:0]rxData, next_rxData;$/;"	r
rx_busy	uart/uart_rx.v	/^reg rx_busy; $/;"	r
rx_data	dso_ctl.v	/^wire	[7:0]	rx_data;$/;"	n
rx_data	uart/uart_rx.v	/^output	[7:0]	rx_data;		\/\/ data byte received $/;"	p
rx_data	uart/uart_rx.v	/^reg	[7:0] rx_data;$/;"	r
rx_data	uart/uart_top.v	/^output	[7:0]	rx_data;		\/\/ data byte received $/;"	p
s_init_finished	sdramc/sdram_ctl.v	/^reg s_init_finished = 1'b0;$/;"	r
sample	sample.v	/^module sample($/;"	m
sampleDivider	dso_ctl.v	/^reg	[23:0]	sampleDivider;$/;"	r
sampleDivider_nxt	dso_ctl.v	/^wire	[23:0]	sampleDivider_nxt;$/;"	n
sample_clk	DSLogic_top.v	/^wire		sample_clk;$/;"	n
sample_clk	sample.v	/^	output	sample_clk,$/;"	p
sample_cnt	sample.v	/^reg	[23:0]	sample_cnt;$/;"	r
sample_cnt_nxt	sample.v	/^wire	[23:0]	sample_cnt_nxt;$/;"	n
sample_data	DSLogic_top.v	/^wire	[15:0]	sample_data;$/;"	n
sample_data	capture.v	/^	input	[15:0]	sample_data,$/;"	p
sample_data	sample.v	/^	output		[15:0]	sample_data,$/;"	p
sample_data	trigger.v	/^	input	[15:0]	sample_data,$/;"	p
sample_data_fix_dly	capture.v	/^wire	[15:0]	sample_data_fix_dly;$/;"	n
sample_depth	DSLogic_top.v	/^wire	[31:0]	sample_depth;$/;"	n
sample_depth	loopback.v	/^	output		[31:0]	sample_depth,$/;"	p
sample_divider	DSLogic_top.v	/^wire	[23:0]	sample_divider;$/;"	n
sample_divider	sample.v	/^	input	[23:0]	sample_divider,$/;"	p
sample_en	DSLogic_top.v	/^reg	sample_en;$/;"	r
sample_en	dwrite.v	/^	input		sample_en,$/;"	p
sample_en	trigger.v	/^	input				sample_en,$/;"	p
sample_en_1T	capture.v	/^reg	sample_en_1T = 1'b0;$/;"	r
sample_en_1T	cons_buf.v	/^reg	sample_en_1T;$/;"	r
sample_en_1T	sample.v	/^reg		sample_en_1T;$/;"	r
sample_en_1T	trigger.v	/^reg				sample_en_1T;$/;"	r
sample_en_sync0	dwrite.v	/^reg				sample_en_sync0;$/;"	r
sample_en_sync1	dwrite.v	/^reg				sample_en_sync1;$/;"	r
sample_en_sync2	dwrite.v	/^reg				sample_en_sync2;$/;"	r
sample_last_cnt	DSLogic_top.v	/^wire	[31:0]	sample_last_cnt;$/;"	n
sample_last_cnt	capture.v	/^	input	[31:0]	sample_last_cnt,$/;"	p
sample_rd	sample.v	/^reg		sample_rd;$/;"	r
sample_rd_nxt	sample.v	/^wire		sample_rd_nxt;$/;"	n
sample_rdy	DSLogic_top.v	/^reg	sample_rdy;$/;"	r
sample_rdy_1T	DSLogic_top.v	/^reg	sample_rdy_1T;$/;"	r
sample_real_start	DSLogic_top.v	/^wire	[31:0]	sample_real_start;$/;"	n
sample_rst	DSLogic_top.v	/^wire		sample_rst;$/;"	n
sample_rst	sample.v	/^	input	sample_rst,$/;"	p
sample_rst_reg	reset.v	/^reg	[17:0]	sample_rst_reg;$/;"	r
sample_rst_reg_nxt	reset.v	/^wire	[17:0]	sample_rst_reg_nxt;$/;"	n
sample_valid	DSLogic_top.v	/^wire		sample_valid;$/;"	n
sample_valid_1T	trigger.v	/^reg				sample_valid_1T = 1'b0;$/;"	r
sample_valid_2T	trigger.v	/^reg				sample_valid_2T = 1'b0;$/;"	r
sample_valid_dly	capture.v	/^wire	sample_valid_dly;$/;"	n
sample_valid_fix_dly	capture.v	/^wire				sample_valid_fix_dly;$/;"	n
sample_valid_nxt	sample.v	/^wire		sample_valid_nxt;$/;"	n
sample_wr_en	sample.v	/^wire	sample_wr_en = quarter_mode ? sample_en & quarter_valid : sample_en;$/;"	n
scl	DSLogic_top.v	/^	input		scl,$/;"	p
scl	dso_ctl.v	/^	input	 	scl,$/;"	p
scl	i2c/i2cSlave.v	/^input scl;$/;"	p
scl	i2c/serialInterface.v	/^input   scl;$/;"	p
scl	i2c/serialInterface.v	/^wire    scl;$/;"	n
sclDeb	i2c/i2cSlave.v	/^reg sclDeb;$/;"	r
sclDelayed	i2c/i2cSlave.v	/^reg [`SCL_DEL_LEN-1:0] sclDelayed;$/;"	r
sclPipe	i2c/i2cSlave.v	/^reg [`DEB_I2C_LEN-1:0] sclPipe;$/;"	r
sd_ba	DSLogic_top.v	/^	output	[1:0]	sd_ba,$/;"	p
sd_clk	DSLogic_top.v	/^wire		sd_clk;$/;"	n
sd_clk	reset.v	/^	input	sd_clk,$/;"	p
sd_clk0_locked	loopback.v	/^reg	sd_clk0_locked;$/;"	r
sd_clk0_locked_1T	loopback.v	/^reg	sd_clk0_locked_1T;$/;"	r
sd_clk1_locked	loopback.v	/^reg	sd_clk1_locked;$/;"	r
sd_clk1_locked_1T	loopback.v	/^reg	sd_clk1_locked_1T;$/;"	r
sd_clk_en_nxt	loopback.v	/^wire	sd_clk_en_nxt;$/;"	n
sd_clk_fb	DSLogic_top.v	/^	input	sd_clk_fb,$/;"	p
sd_clk_locked	loopback.v	/^reg	sd_clk_locked;$/;"	r
sd_clk_locked_1T	loopback.v	/^reg	sd_clk_locked_1T;$/;"	r
sd_clk_rst_cnt	loopback.v	/^reg	[3:0]	sd_clk_rst_cnt;$/;"	r
sd_clk_rst_cnt_nxt	loopback.v	/^wire	[3:0]	sd_clk_rst_cnt_nxt;$/;"	n
sd_clk_rst_nxt	loopback.v	/^wire	sd_clk_rst_nxt;$/;"	n
sd_clk_sel_nxt	loopback.v	/^wire	sd_clk_sel_nxt;$/;"	n
sd_dcm0_locked	loopback.v	/^	input				sd_dcm0_locked,$/;"	p
sd_dcm0_locked_sync	loopback.v	/^reg	sd_dcm0_locked_sync;$/;"	r
sd_dcm1_locked_sync	loopback.v	/^reg	sd_dcm1_locked_sync;$/;"	r
sd_dqmh	DSLogic_top.v	/^	output		sd_dqmh,$/;"	p
sd_fbe	DSLogic_top.v	/^wire		sd_fbe;$/;"	n
sd_fbe	dread.v	/^	input		sd_fbe,$/;"	p
sd_fbe	loopback.v	/^	output			sd_fbe,$/;"	p
sd_init_done	DSLogic_top.v	/^wire	sd_init_done;$/;"	n
sd_init_done_sync	loopback.v	/^reg	sd_init_done_sync;$/;"	r
sd_init_done_sync0	DSLogic_top.v	/^reg	sd_init_done_sync0;$/;"	r
sd_init_done_sync1	DSLogic_top.v	/^reg	sd_init_done_sync1;$/;"	r
sd_lpb_mode	DSLogic_top.v	/^wire		sd_lpb_mode;$/;"	n
sd_lpb_mode	dread.v	/^	input		sd_lpb_mode,$/;"	p
sd_lpb_mode	loopback.v	/^	input	sd_lpb_mode,$/;"	p
sd_ras_	DSLogic_top.v	/^	output		sd_ras_,$/;"	p
sd_rd_addr	DSLogic_top.v	/^wire	[31:0]	sd_rd_addr;$/;"	n
sd_rd_data	DSLogic_top.v	/^wire	[15:0]	sd_rd_data;$/;"	n
sd_rd_rdy	DSLogic_top.v	/^wire		sd_rd_rdy;$/;"	n
sd_rd_rdy	cons_buf.v	/^	input					sd_rd_rdy,$/;"	p
sd_rd_req	DSLogic_top.v	/^wire		sd_rd_req;$/;"	n
sd_rd_valid	DSLogic_top.v	/^wire		sd_rd_valid;$/;"	n
sd_rd_valid	cons_buf.v	/^	input					sd_rd_valid,$/;"	p
sd_rst	DSLogic_top.v	/^wire		sd_rst;$/;"	n
sd_rst	reset.v	/^	output	sd_rst,$/;"	p
sd_rst_reg	reset.v	/^reg	[3:0]	sd_rst_reg;$/;"	r
sd_rst_reg_nxt	reset.v	/^wire	[3:0]	sd_rst_reg_nxt;$/;"	n
sd_saddr	DSLogic_top.v	/^wire	[31:0]	sd_saddr;$/;"	n
sd_saddr	cfg.v	/^	output	[31:0]	sd_saddr,$/;"	p
sd_saddr	dread.v	/^	input	[31:0]	sd_saddr,$/;"	p
sd_saddr_nxt	capture.v	/^wire	[32:0]	sd_saddr_nxt;$/;"	n
sd_we_	DSLogic_top.v	/^	output		sd_we_,$/;"	p
sd_wr_addr	DSLogic_top.v	/^wire	[31:0]	sd_wr_addr;$/;"	n
sd_wr_data	DSLogic_top.v	/^wire	[15:0]	sd_wr_data;$/;"	n
sd_wr_done	DSLogic_top.v	/^wire		sd_wr_done;$/;"	n
sd_wr_req	DSLogic_top.v	/^wire		sd_wr_req;$/;"	n
sd_wr_valid	DSLogic_top.v	/^wire		sd_wr_valid;$/;"	n
sda	i2c/i2cSlave.v	/^inout sda;$/;"	p
sdaDeb	i2c/i2cSlave.v	/^reg sdaDeb;$/;"	r
sdaDelayed	i2c/i2cSlave.v	/^reg [`SDA_DEL_LEN-1:0] sdaDelayed;$/;"	r
sdaIn	i2c/i2cSlave.v	/^wire sdaIn;$/;"	n
sdaIn	i2c/serialInterface.v	/^input   sdaIn;$/;"	p
sdaIn	i2c/serialInterface.v	/^wire    sdaIn;$/;"	n
sdaOut	i2c/i2cSlave.v	/^wire sdaOut;$/;"	n
sdaOut	i2c/serialInterface.v	/^output  sdaOut;$/;"	p
sdaOut	i2c/serialInterface.v	/^reg     sdaOut, next_sdaOut;$/;"	r
sdaPipe	i2c/i2cSlave.v	/^reg [`DEB_I2C_LEN-1:0] sdaPipe;$/;"	r
sdram_addr	sdramc/mem_ctrl.v	/^	output  [12:0]  sdram_addr,$/;"	p
sdram_ba	sdramc/sdram_io.v	/^    input       [1:0]   sdram_ba, $/;"	p
sdram_cas_	sdramc/mem_ctrl.v	/^	output          sdram_cas_,$/;"	p
sdram_cas_	sdramc/sdram_io.v	/^    input               sdram_cas_,$/;"	p
sdram_cke	sdramc/mem_ctrl.v	/^	output          sdram_cke,$/;"	p
sdram_clk	cons_buf.v	/^	input   				sdram_clk,$/;"	p
sdram_clk	dread.v	/^	input	sdram_clk,$/;"	p
sdram_clk	dwrite.v	/^	input	sdram_clk,$/;"	p
sdram_clk	loopback.v	/^	input	sdram_clk,$/;"	p
sdram_clk	sdramc/mem_ctrl.v	/^	input   sdram_clk,$/;"	p
sdram_clk	sdramc/sdram_init.v	/^    input       sdram_clk,$/;"	p
sdram_clk	sdramc/sdram_io.v	/^    input               sdram_clk,$/;"	p
sdram_cs_	sdramc/sdram_io.v	/^    input               sdram_cs_,$/;"	p
sdram_ctl	sdramc/sdram_ctl.v	/^module sdram_ctl($/;"	m
sdram_dq	sdramc/mem_ctrl.v	/^	inout   [15:0]  sdram_dq,$/;"	p
sdram_dq_oe	sdramc/mem_ctrl.v	/^wire	[15:0]	sdram_dq_oe;$/;"	n
sdram_dq_oe	sdramc/sdram_io.v	/^    input               sdram_dq_oe,$/;"	p
sdram_dqi	sdramc/mem_ctrl.v	/^wire	[15:0]	sdram_dqi;$/;"	n
sdram_dqm	sdramc/sdram_io.v	/^	 input					sdram_dqm,$/;"	p
sdram_dqml	sdramc/mem_ctrl.v	/^	output  	 		 sdram_dqml,$/;"	p
sdram_dqo	sdramc/mem_ctrl.v	/^wire	[15:0]	sdram_dqo;$/;"	n
sdram_init	sdramc/sdram_init.v	/^module sdram_init ($/;"	m
sdram_io	sdramc/sdram_io.v	/^module sdram_io ($/;"	m
sdram_rst_	DSLogic_top.v	/^wire		sdram_rst_;$/;"	n
sdram_rst_reg	reset.v	/^reg	[3:0]	sdram_rst_reg = 4'b0;$/;"	r
sdram_rst_reg_nxt	reset.v	/^wire	[3:0]	sdram_rst_reg_nxt;$/;"	n
sdwr_done	loopback.v	/^	input			sdwr_done,$/;"	p
sdwr_done_extend	loopback.v	/^reg			sdwr_done_extend;$/;"	r
sdwr_done_extend_nxt	loopback.v	/^wire			sdwr_done_extend_nxt;$/;"	n
sdwr_done_shift	loopback.v	/^reg	[7:0]	sdwr_done_shift;$/;"	r
sdwr_done_sync	loopback.v	/^reg	sdwr_done_sync;$/;"	r
ser_in	uart/uart_rx.v	/^input			ser_in;			\/\/ serial data input $/;"	p
ser_in	uart/uart_top.v	/^input			ser_in;			\/\/ serial data input $/;"	p
ser_out	uart/uart_top.v	/^output			ser_out;		\/\/ serial data output $/;"	p
ser_out	uart/uart_tx.v	/^output			ser_out;		\/\/ serial data output $/;"	p
ser_out	uart/uart_tx.v	/^reg ser_out;$/;"	r
serialInterface	i2c/serialInterface.v	/^module serialInterface (clearStartStopDet, clk, dataIn, dataOut, regAddr, rst, scl, sdaIn, sdaOut, startStopDetState, writeEn);$/;"	m
set_before_real	capture.v	/^reg	set_before_real;$/;"	r
set_before_real_nxt	capture.v	/^wire	set_before_real_nxt;$/;"	n
set_mode_finished	sdramc/sdram_ctl.v	/^reg set_mode_finished = 1'b0;$/;"	r
set_sampleDivider	dso_ctl.v	/^reg	set_sampleDivider;$/;"	r
set_sampleDivider_nxt	dso_ctl.v	/^wire	set_sampleDivider_nxt;$/;"	n
set_triggerPos	dso_ctl.v	/^reg	set_triggerPos;$/;"	r
set_triggerPos_nxt	dso_ctl.v	/^wire	set_triggerPos_nxt;$/;"	n
set_triggerValue	dso_ctl.v	/^reg	set_triggerValue;$/;"	r
set_triggerValue_nxt	dso_ctl.v	/^wire	set_triggerValue_nxt;$/;"	n
slope016_log	cons_buf.v	/^reg	[3:0]		slope016_log;$/;"	r
slope016_log_nxt	cons_buf.v	/^wire	[3:0]		slope016_log_nxt;$/;"	n
slope01_log	cons_buf.v	/^reg	[3:0]		slope01_log;$/;"	r
slope01_log_nxt	cons_buf.v	/^wire	[3:0]		slope01_log_nxt;$/;"	n
slope02_log	cons_buf.v	/^reg	[3:0]		slope02_log;$/;"	r
slope02_log_nxt	cons_buf.v	/^wire	[3:0]		slope02_log_nxt;$/;"	n
slope04_log	cons_buf.v	/^reg	[3:0]		slope04_log;$/;"	r
slope04_log_nxt	cons_buf.v	/^wire	[3:0]		slope04_log_nxt;$/;"	n
slope08_log	cons_buf.v	/^reg	[3:0]		slope08_log;$/;"	r
slope08_log_nxt	cons_buf.v	/^wire	[3:0]		slope08_log_nxt;$/;"	n
slope116_log	cons_buf.v	/^reg	[3:0]		slope116_log;$/;"	r
slope116_log_nxt	cons_buf.v	/^wire	[3:0]		slope116_log_nxt;$/;"	n
slope11_log	cons_buf.v	/^reg	[3:0]		slope11_log;$/;"	r
slope11_log_nxt	cons_buf.v	/^wire	[3:0]		slope11_log_nxt;$/;"	n
slope12_log	cons_buf.v	/^reg	[3:0]		slope12_log;$/;"	r
slope12_log_nxt	cons_buf.v	/^wire	[3:0]		slope12_log_nxt;$/;"	n
slope14_log	cons_buf.v	/^reg	[3:0]		slope14_log;$/;"	r
slope14_log_nxt	cons_buf.v	/^wire	[3:0]		slope14_log_nxt;$/;"	n
slope18_log	cons_buf.v	/^reg	[3:0]		slope18_log;$/;"	r
slope18_log_nxt	cons_buf.v	/^wire	[3:0]		slope18_log_nxt;$/;"	n
st_break_rw	sdramc/sdram_ctl.v	/^wire st_break_rw = !RW & D_RWt;$/;"	n
st_init_finished	sdramc/sdram_ctl.v	/^wire st_init_finished = !s_init_finished & init_finished;$/;"	n
st_lst_rd	sdramc/sdram_ctl.v	/^wire st_lst_rd = lst_rd & !lst_rd_d;                                      \/\/ added 1110$/;"	n
stable_valid	sample.v	/^reg	stable_valid;$/;"	r
stable_valid_nxt	sample.v	/^wire	stable_valid_nxt;$/;"	n
startEdgeDet	i2c/i2cSlave.v	/^reg startEdgeDet;$/;"	r
startStopDetState	i2c/i2cSlave.v	/^reg [1:0] startStopDetState;$/;"	r
startStopDetState	i2c/serialInterface.v	/^input   [1:0]startStopDetState;$/;"	p
startStopDetState	i2c/serialInterface.v	/^wire    [1:0]startStopDetState;$/;"	n
start_burst	sdramc/sdram_ctl.v	/^wire start_burst = ((tRCD == 0) & start_row_active) | $/;"	n
start_burst_term	sdramc/sdram_ctl.v	/^wire start_burst_term = d_burst_term & !q_burst_term;$/;"	n
start_fst_rd	sdramc/sdram_ctl.v	/^wire start_fst_rd = RD & TIMING_CNT_EQ_0 & q_row_active & !break_rw;$/;"	n
start_fst_wr	sdramc/sdram_ctl.v	/^wire start_fst_wr = WR & TIMING_CNT_EQ_0 & q_row_active & !break_rw;$/;"	n
start_init_prech	sdramc/sdram_ctl.v	/^wire start_init_prech = PAA & !S_PAA;$/;"	n
start_norm_precharge	sdramc/sdram_ctl.v	/^wire start_norm_precharge  = ( q_rd | q_burst_term | q_row_active | q_rd2prech ) & d_precharge;$/;"	n
start_nxt_rd	sdramc/sdram_ctl.v	/^wire start_nxt_rd = RD & BURST_CNT_EQ_0 & !page_boundary & $/;"	n
start_nxt_wr	sdramc/sdram_ctl.v	/^wire start_nxt_wr = WR & BURST_CNT_EQ_0 & !page_boundary & $/;"	n
start_precharge	sdramc/sdram_ctl.v	/^wire start_precharge  = start_init_prech | start_norm_precharge;$/;"	n
start_rd	sdramc/sdram_ctl.v	/^wire start_rd = start_fst_rd | start_nxt_rd;$/;"	n
start_ref_timing	sdramc/sdram_ctl.v	/^wire start_ref_timing;$/;"	n
start_row_active	sdramc/sdram_ctl.v	/^wire start_row_active = ( q_idle | q_precharge & RP_CNT_EQ_0 ) & !inhibit_new_cmd & RW;$/;"	n
start_rw	sdramc/sdram_ctl.v	/^wire start_rw = start_rd | start_wr;$/;"	n
start_wr	sdramc/sdram_ctl.v	/^wire start_wr = start_fst_wr | start_nxt_wr;$/;"	n
status_int	ipcore_dir/in_dcm.v	/^  wire [7:0]  status_int;$/;"	n
status_int	ipcore_dir/int_skew_dcm.v	/^  wire [7:0]  status_int;$/;"	n
status_int	ipcore_dir/out_skew_dcm.v	/^  wire [7:0]  status_int;$/;"	n
streamSt	i2c/serialInterface.v	/^reg  [1:0]streamSt, next_streamSt;$/;"	r
swrd_done	loopback.v	/^reg	swrd_done;$/;"	r
swrd_done_nxt	loopback.v	/^wire	swrd_done_nxt;$/;"	n
swwr_done	loopback.v	/^reg	swwr_done;$/;"	r
swwr_done_nxt	loopback.v	/^wire	swwr_done_nxt;$/;"	n
sync_dout	sample.v	/^wire	[15:0]	sync_dout;$/;"	n
sys_addr	sdramc/mem_ctrl.v	/^wire	[31:0]	sys_addr;$/;"	n
sys_burst_rdy	sdramc/mem_ctrl.v	/^wire		sys_burst_rdy;$/;"	n
sys_clk	DSLogic_top.v	/^ 	input	sys_clk,$/;"	p
sys_clr	DSLogic_top.v	/^	input	sys_clr,$/;"	p
sys_en	dread.v	/^	input		sys_en,$/;"	p
sys_en_sync0	DSLogic_top.v	/^reg	sys_en_sync0;$/;"	r
sys_en_sync0	dread.v	/^reg	sys_en_sync0;$/;"	r
sys_en_sync1	DSLogic_top.v	/^reg	sys_en_sync1;$/;"	r
sys_en_sync1	dread.v	/^reg	sys_en_sync1;$/;"	r
sys_en_sync2	dread.v	/^reg	sys_en_sync2;$/;"	r
sys_rd	sdramc/mem_ctrl.v	/^wire		sys_rd;$/;"	n
sys_rd_rdy	sdramc/mem_ctrl.v	/^wire		sys_rd_rdy;$/;"	n
sys_rdata	sdramc/mem_ctrl.v	/^wire	[15:0]	sys_rdata;$/;"	n
sys_rst	reset.v	/^	input	sys_rst,$/;"	p
sys_wdata	sdramc/mem_ctrl.v	/^wire	[15:0]	sys_wdata;$/;"	n
sys_wr	sdramc/mem_ctrl.v	/^wire		sys_wr;$/;"	n
tCAS	sdramc/mem_ctrl.v	/^wire    [1:0]   tCAS;$/;"	n
tCAS	sdramc/sdram_ctl.v	/^input   [1:0] tRCD, tCAS, tRP;$/;"	p
tRAS	sdramc/mem_ctrl.v	/^wire    [2:0]   tRAS;$/;"	n
tRAS	sdramc/sdram_ctl.v	/^input   [2:0] tRAS;$/;"	p
tRC	sdramc/mem_ctrl.v	/^wire    [3:0]   tRC;$/;"	n
tRC	sdramc/sdram_ctl.v	/^input   [3:0] tRC;$/;"	p
tRCD	sdramc/mem_ctrl.v	/^wire    [1:0]   tRCD;$/;"	n
tRCD	sdramc/sdram_ctl.v	/^input   [1:0] tRCD, tCAS, tRP;$/;"	p
tREF	sdramc/mem_ctrl.v	/^wire    [11:0]  tREF;$/;"	n
tREF	sdramc/sdram_ctl.v	/^input  [11:0] tREF;$/;"	p
tRP	sdramc/mem_ctrl.v	/^wire    [1:0]   tRP;$/;"	n
tRP	sdramc/sdram_ctl.v	/^input   [1:0] tRCD, tCAS, tRP;$/;"	p
test_data	sample.v	/^reg	[15:0]	test_data;$/;"	r
test_data_nxt	sample.v	/^wire	[15:0]	test_data_nxt;$/;"	n
test_ledn_cnt	sample.v	/^reg	[25:0]	test_ledn_cnt;$/;"	r
test_ledn_cnt_nxt	sample.v	/^wire	[25:0]	test_ledn_cnt_nxt;$/;"	n
test_mode	DSLogic_top.v	/^wire		test_mode;$/;"	n
trig_after	capture.v	/^reg				trig_after;$/;"	r
trig_after_nxt	capture.v	/^wire				trig_after_nxt;$/;"	n
trig_cfg_fifo	ipcore_dir/trig_cfg_fifo.v	/^module trig_cfg_fifo($/;"	m
trig_count	DSLogic_top.v	/^wire	[15:0]	trig_count;$/;"	n
trig_count	trigger.v	/^	input	[15:0]	trig_count,$/;"	p
trig_count_wr	DSLogic_top.v	/^wire				trig_count_wr;$/;"	n
trig_dly	DSLogic_top.v	/^wire	[3:0]	trig_dly;$/;"	n
trig_dly	trigger.v	/^	output	[3:0]	trig_dly,$/;"	p
trig_edge	DSLogic_top.v	/^wire	[15:0]	trig_edge;$/;"	n
trig_edge	cfg.v	/^	output	[15:0]	trig_edge,$/;"	p
trig_edge_wr	DSLogic_top.v	/^wire				trig_edge_wr;$/;"	n
trig_edge_wr	cfg.v	/^	output				trig_edge_wr,$/;"	p
trig_edge_wr	trigger.v	/^	input				trig_edge_wr,$/;"	p
trig_en	DSLogic_top.v	/^wire				trig_en;$/;"	n
trig_en	cfg.v	/^	output				trig_en,$/;"	p
trig_hit	DSLogic_top.v	/^wire		trig_hit;$/;"	n
trig_hit	capture.v	/^	input		trig_hit,$/;"	p
trig_hit	dwrite.v	/^	input				 trig_hit,$/;"	p
trig_hit	rle.v	/^	input		trig_hit,$/;"	p
trig_hit_1T	capture.v	/^reg	trig_hit_1T = 1'b0;$/;"	r
trig_hit_dly	capture.v	/^reg		trig_hit_dly;$/;"	r
trig_hit_dly_nxt	capture.v	/^wire		trig_hit_dly_nxt;$/;"	n
trig_hit_nxt	trigger.v	/^wire		trig_hit_nxt;$/;"	n
trig_hit_pulse	capture.v	/^wire		trig_hit_pulse;$/;"	n
trig_logic	DSLogic_top.v	/^wire	[1:0]		trig_logic;$/;"	n
trig_logic	cfg.v	/^	output	[1:0]		trig_logic,$/;"	p
trig_logic_wr	DSLogic_top.v	/^wire				trig_logic_wr;$/;"	n
trig_logic_wr	cfg.v	/^	output				trig_logic_wr,$/;"	p
trig_logic_wr	trigger.v	/^	input				trig_logic_wr,$/;"	p
trig_mask	DSLogic_top.v	/^wire	[15:0]	trig_mask;$/;"	n
trig_mask	cfg.v	/^	output	[15:0]	trig_mask,$/;"	p
trig_mask_wr	DSLogic_top.v	/^wire				trig_mask_wr;$/;"	n
trig_mask_wr	trigger.v	/^	input				trig_mask_wr,$/;"	p
trig_mu	DSLogic_top.v	/^wire	[1:0]		trig_mu;$/;"	n
trig_real_hit	capture.v	/^reg	trig_real_hit;$/;"	r
trig_real_hit_nxt	capture.v	/^wire	trig_real_hit_nxt;$/;"	n
trig_real_pos	DSLogic_top.v	/^wire	[31:0]	trig_real_pos;$/;"	n
trig_real_pos_nxt	capture.v	/^wire	[31:0]	trig_real_pos_nxt;$/;"	n
trig_real_start	capture.v	/^reg	[32:0]	trig_real_start;$/;"	r
trig_real_start_nxt	capture.v	/^wire	[32:0]	trig_real_start_nxt;$/;"	n
trig_set_pos	DSLogic_top.v	/^wire	[31:0]	trig_set_pos;$/;"	n
trig_set_pos	capture.v	/^	input	[31:0]	trig_set_pos,$/;"	p
trig_set_pos	cfg.v	/^	output	[31:0]	trig_set_pos,$/;"	p
trig_set_pos_minus1	DSLogic_top.v	/^wire	[31:0]	trig_set_pos_minus1;$/;"	n
trig_shift	trigger.v	/^wire				trig_shift;$/;"	n
trig_stages	DSLogic_top.v	/^wire	[3:0]		trig_stages;$/;"	n
trig_stages	trigger.v	/^	input	[3:0]		trig_stages,$/;"	p
trig_value	DSLogic_top.v	/^wire	[15:0]	trig_value;$/;"	n
trig_value	trigger.v	/^	input	[15:0]	trig_value,$/;"	p
trig_value_wr	DSLogic_top.v	/^wire				trig_value_wr;$/;"	n
trig_value_wr	cfg.v	/^	output				trig_value_wr,$/;"	p
trigger	trigger.v	/^module trigger($/;"	m
triggerPos	dso_ctl.v	/^reg	[23:0]	triggerPos;$/;"	r
triggerPos_nxt	dso_ctl.v	/^wire	[23:0]	triggerPos_nxt;$/;"	n
triggerSlope	dso_ctl.v	/^reg	[7:0]		triggerSlope;$/;"	r
triggerSlope_nxt	dso_ctl.v	/^wire	[7:0]		triggerSlope_nxt;$/;"	n
triggerSource	dso_ctl.v	/^reg	[7:0]		triggerSource;$/;"	r
triggerSource_nxt	dso_ctl.v	/^wire	[7:0]		triggerSource_nxt;$/;"	n
triggerValue	dso_ctl.v	/^reg	[15:0]	triggerValue;$/;"	r
triggerValue_nxt	dso_ctl.v	/^wire	[15:0]	triggerValue_nxt;$/;"	n
trigger_hit	cons_buf.v	/^reg	trigger_hit;$/;"	r
trigger_hit_1T	cons_buf.v	/^reg	trigger_hit_1T;$/;"	r
trigger_hit_nxt	cons_buf.v	/^wire	trigger_hit_nxt;$/;"	n
txData	i2c/serialInterface.v	/^reg  [7:0]txData, next_txData;$/;"	r
tx_busy	dso_ctl.v	/^wire	tx_busy;$/;"	n
tx_busy	uart/uart_top.v	/^output 			tx_busy;		\/\/ signs that transmitter is busy $/;"	p
tx_busy	uart/uart_tx.v	/^output 			tx_busy;		\/\/ signs that transmitter is busy $/;"	p
tx_busy	uart/uart_tx.v	/^reg tx_busy;$/;"	r
tx_data	dso_ctl.v	/^wire	[7:0]	tx_data;$/;"	n
tx_data	uart/uart_top.v	/^input	[7:0]	tx_data;		\/\/ data byte to transmit $/;"	p
tx_data	uart/uart_tx.v	/^input	[7:0]	tx_data;		\/\/ data byte to transmit $/;"	p
uart_rx	DSLogic_top.v	/^wire	uart_rx;$/;"	n
uart_rx	dso_ctl.v	/^	input	 	uart_rx,$/;"	p
uart_rx	uart/uart_rx.v	/^module uart_rx $/;"	m
uart_top	uart/uart_top.v	/^module uart_top $/;"	m
uart_tx	DSLogic_top.v	/^wire	uart_tx;$/;"	n
uart_tx	uart/uart_tx.v	/^module uart_tx  $/;"	m
usb_addr	cfg.v	/^reg	[5:0]	usb_addr;$/;"	r
usb_addr_nxt	cfg.v	/^wire	[5:0]	usb_addr_nxt;$/;"	n
usb_cfg	cfg.v	/^reg		usb_cfg;$/;"	r
usb_cfg_addr	cfg.v	/^wire	[4:0]	usb_cfg_addr;$/;"	n
usb_cfg_cnt	cfg.v	/^reg	[7:0]	usb_cfg_cnt;$/;"	r
usb_cfg_cnt_nxt	cfg.v	/^wire	[7:0]	usb_cfg_cnt_nxt;$/;"	n
usb_cfg_din	cfg.v	/^wire	[15:0]	usb_cfg_din;$/;"	n
usb_cfg_dout	DSLogic_top.v	/^wire	[15:0]	usb_cfg_dout;$/;"	n
usb_cfg_dout	cfg.v	/^reg	[15:0]	usb_cfg_dout;$/;"	r
usb_cfg_dout_nxt	cfg.v	/^wire	[15:0]	usb_cfg_dout_nxt;$/;"	n
usb_cfg_nxt	cfg.v	/^wire		usb_cfg_nxt;$/;"	n
usb_cfg_rd	cfg.v	/^wire		usb_cfg_rd;$/;"	n
usb_cfg_sync	cfg.v	/^reg		usb_cfg_sync;$/;"	r
usb_cfg_sync_nxt	cfg.v	/^wire		usb_cfg_sync_nxt;$/;"	n
usb_cfg_wr	cfg.v	/^wire		usb_cfg_wr;$/;"	n
usb_clk	DSLogic_top.v	/^wire		usb_clk;$/;"	n
usb_clk	cfg.v	/^	input		usb_clk,$/;"	p
usb_clk	dread.v	/^	input	usb_clk,$/;"	p
usb_clk	loopback.v	/^	input	usb_clk,$/;"	p
usb_data	DSLogic_top.v	/^	inout	[15:0]	usb_data,$/;"	p
usb_data	cfg.v	/^	input	[15:0]	usb_data,$/;"	p
usb_data_phase	dread.v	/^reg	usb_data_phase;$/;"	r
usb_data_phase_nxt	dread.v	/^wire	usb_data_phase_nxt;$/;"	n
usb_data_reg	cfg.v	/^reg	[15:0]	usb_data_reg;$/;"	r
usb_din	DSLogic_top.v	/^wire	[15:0]	usb_din;$/;"	n
usb_dout	DSLogic_top.v	/^wire	[15:0]	usb_dout;$/;"	n
usb_en	DSLogic_top.v	/^	input		usb_en,$/;"	p
usb_en	cfg.v	/^	input		usb_en,$/;"	p
usb_en_reg	cfg.v	/^reg		usb_en_reg;$/;"	r
usb_rd	DSLogic_top.v	/^wire	usb_rd;$/;"	n
usb_rd_cnt	dread.v	/^reg	[7:0]	usb_rd_cnt;$/;"	r
usb_rd_cnt_nxt	dread.v	/^wire	[7:0]	usb_rd_cnt_nxt;$/;"	n
usb_rd_nxt	loopback.v	/^wire	usb_rd_nxt;$/;"	n
usb_rd_valid	dread.v	/^	output		usb_rd_valid,$/;"	p
usb_rd_valid	loopback.v	/^	input			usb_rd_valid,$/;"	p
usb_rdata	DSLogic_top.v	/^wire	[15:0]	usb_rdata;$/;"	n
usb_rdata_high	dread.v	/^reg	[15:0]	usb_rdata_high;$/;"	r
usb_rdata_high_nxt	dread.v	/^wire	[15:0]	usb_rdata_high_nxt;$/;"	n
usb_rdata_low	dread.v	/^wire	[15:0]	usb_rdata_low;$/;"	n
usb_rdy	DSLogic_top.v	/^	output		usb_rdy,$/;"	p
usb_rdy	loopback.v	/^	input			usb_rdy,$/;"	p
usb_rdy_nxt	dread.v	/^wire	usb_rdy_nxt;$/;"	n
usb_rst_reg	reset.v	/^reg	[3:0]	usb_rst_reg;$/;"	r
usb_rst_reg_nxt	reset.v	/^wire	[3:0]	usb_rst_reg_nxt;$/;"	n
usb_wr_reg	cfg.v	/^reg		usb_wr_reg;$/;"	r
value_cfg_empty	cfg.v	/^wire	value_cfg_empty;$/;"	n
value_dout	cfg.v	/^wire	[17:0]	value_dout;$/;"	n
w00	cfg.v	/^wire	w00 = usb_cfg_wr & (usb_cfg_addr == 5'd0);$/;"	n
w01	cfg.v	/^wire	w01 = usb_cfg_wr & (usb_cfg_addr == 5'd1);$/;"	n
w02	cfg.v	/^wire	w02 = usb_cfg_wr & (usb_cfg_addr == 5'd2);$/;"	n
w03	cfg.v	/^wire	w03 = usb_cfg_wr & (usb_cfg_addr == 5'd3);$/;"	n
w04	cfg.v	/^wire	w04 = usb_cfg_wr & (usb_cfg_addr == 5'd4);$/;"	n
w05	cfg.v	/^wire	w05 = usb_cfg_wr & (usb_cfg_addr == 5'd5);$/;"	n
w06	cfg.v	/^wire	w06 = usb_cfg_wr & (usb_cfg_addr == 5'd6);$/;"	n
w07	cfg.v	/^wire	w07 = usb_cfg_wr & (usb_cfg_addr == 5'd7);$/;"	n
w08	cfg.v	/^wire	w08 = usb_cfg_wr & (usb_cfg_addr == 5'd8);$/;"	n
w09	cfg.v	/^wire	w09 = usb_cfg_wr & (usb_cfg_addr == 5'd9);$/;"	n
w10	cfg.v	/^wire	w10 = usb_cfg_wr & (usb_cfg_addr == 5'd10);$/;"	n
w11	cfg.v	/^wire	w11 = usb_cfg_wr & (usb_cfg_addr == 5'd11);$/;"	n
w12	cfg.v	/^wire	w12 = usb_cfg_wr & (usb_cfg_addr == 5'd12);$/;"	n
w13	cfg.v	/^wire	w13 = usb_cfg_wr & (usb_cfg_addr == 5'd13);$/;"	n
wfifo	ipcore_dir/wfifo.v	/^module wfifo($/;"	m
wfifo_empty	dwrite.v	/^wire			wfifo_empty;$/;"	n
wfifo_empty_dly_cnt	dwrite.v	/^reg	[3:0]		wfifo_empty_dly_cnt;$/;"	r
wfifo_empty_dly_cnt_nxt	dwrite.v	/^wire	[3:0]		wfifo_empty_dly_cnt_nxt;$/;"	n
wfifo_full	dwrite.v	/^	output wfifo_full,$/;"	p
wfifo_prog_empty	dwrite.v	/^wire			wfifo_prog_empty;$/;"	n
wfifo_rcnt	dwrite.v	/^wire	[9:0]	wfifo_rcnt;$/;"	n
wfifo_real_empty	dwrite.v	/^reg				wfifo_real_empty;$/;"	r
wfifo_real_empty_nxt	dwrite.v	/^wire				wfifo_real_empty_nxt;$/;"	n
wfifo_real_empty_sync0	dwrite.v	/^reg				wfifo_real_empty_sync0;$/;"	r
wfifo_real_empty_sync1	dwrite.v	/^reg				wfifo_real_empty_sync1;$/;"	r
wfull	sample.v	/^wire	wfull;$/;"	n
wireless_mode	DSLogic_top.v	/^wire		wireless_mode;$/;"	n
wireless_mode	cfg.v	/^	output		wireless_mode,$/;"	p
wr_addr	DSLogic_top.v	/^wire	[31:0]	wr_addr;$/;"	n
wr_addr	sdramc/mem_ctrl.v	/^    	input	[31:0]  wr_addr,$/;"	p
wr_addr_nxt	dwrite.v	/^wire	[31:0]	wr_addr_nxt;$/;"	n
wr_clk	ipcore_dir/asyncfifo.v	/^input wr_clk;$/;"	p
wr_clk	ipcore_dir/rfifo.v	/^input wr_clk;$/;"	p
wr_clk	ipcore_dir/trig_cfg_fifo.v	/^input wr_clk;$/;"	p
wr_clk	ipcore_dir/wfifo.v	/^input wr_clk;$/;"	p
wr_cnt	dwrite.v	/^reg	[31:0]	wr_cnt;$/;"	r
wr_cnt_nxt	dwrite.v	/^wire	[31:0]	wr_cnt_nxt;$/;"	n
wr_data	DSLogic_top.v	/^wire	[15:0]	wr_data;$/;"	n
wr_data	dwrite.v	/^    	output  	[15:0]  wr_data,$/;"	p
wr_data_count	ipcore_dir/rfifo.v	/^output [9 : 0] wr_data_count;$/;"	p
wr_done	DSLogic_top.v	/^wire		wr_done;$/;"	n
wr_done_nxt	dwrite.v	/^wire		wr_done_nxt;$/;"	n
wr_en	ipcore_dir/asyncfifo.v	/^input wr_en;$/;"	p
wr_en	ipcore_dir/cfifo.v	/^input wr_en;$/;"	p
wr_en	ipcore_dir/cmd_fifo.v	/^input wr_en;$/;"	p
wr_en	ipcore_dir/rfifo.v	/^input wr_en;$/;"	p
wr_en	ipcore_dir/trig_cfg_fifo.v	/^input wr_en;$/;"	p
wr_en	ipcore_dir/wfifo.v	/^input wr_en;$/;"	p
wr_flag	loopback.v	/^reg	wr_flag;$/;"	r
wr_flag_1T	loopback.v	/^reg	wr_flag_1T;$/;"	r
wr_loop	loopback.v	/^reg	wr_loop;$/;"	r
wr_loop_nxt	loopback.v	/^wire	wr_loop_nxt;$/;"	n
wr_phase	loopback.v	/^reg	wr_phase;$/;"	r
wr_phase_nxt	loopback.v	/^wire	wr_phase_nxt;$/;"	n
wr_phase_sync	loopback.v	/^reg	wr_phase_sync;$/;"	r
wr_req	DSLogic_top.v	/^wire		wr_req;$/;"	n
wr_req	sdramc/mem_ctrl.v	/^    	input	       	wr_req,$/;"	p
wr_req_1T	dwrite.v	/^reg		wr_req_1T;$/;"	r
wr_req_nxt	dwrite.v	/^wire		wr_req_nxt;$/;"	n
wr_rst	ipcore_dir/asyncfifo.v	/^input wr_rst;$/;"	p
wr_rst	ipcore_dir/rfifo.v	/^input wr_rst;$/;"	p
wr_rst	ipcore_dir/trig_cfg_fifo.v	/^input wr_rst;$/;"	p
wr_rst	ipcore_dir/wfifo.v	/^input wr_rst;$/;"	p
wr_valid	DSLogic_top.v	/^wire		wr_valid;$/;"	n
wr_valid	dwrite.v	/^    	input           	wr_valid,$/;"	p
writeEn	dso_ctl.v	/^wire			writeEn;$/;"	n
writeEn	i2c/i2cSlave.v	/^output writeEn;$/;"	p
writeEn	i2c/serialInterface.v	/^output  writeEn;$/;"	p
writeEn	i2c/serialInterface.v	/^reg     writeEn, next_writeEn;$/;"	r
write_cnt	loopback.v	/^reg	[31:0]	write_cnt;$/;"	r
write_cnt_nxt	loopback.v	/^wire	[31:0]	write_cnt_nxt;$/;"	n
write_done	loopback.v	/^reg	write_done;$/;"	r
zero_capture	capture.v	/^reg			zero_capture;$/;"	r
zero_capture_nxt	capture.v	/^wire			zero_capture_nxt;$/;"	n
